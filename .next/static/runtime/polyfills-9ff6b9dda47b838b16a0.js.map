{"version":3,"sources":["webpack:///./node_modules/whatwg-fetch/dist/fetch.umd.js","webpack:///./node_modules/object-assign/index.js","webpack:///./node_modules/next/dist/client/polyfills.js"],"names":["exports","support","searchParams","self","iterable","Symbol","blob","Blob","e","formData","arrayBuffer","viewClasses","isArrayBufferView","ArrayBuffer","isView","obj","indexOf","Object","prototype","toString","call","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","shift","done","undefined","Headers","headers","this","map","forEach","append","Array","isArray","header","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","bufferClone","buf","slice","view","Uint8Array","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","get","type","rejected","Error","then","text","readAsText","readBlobAsText","chars","length","i","fromCharCode","join","readArrayBufferAsText","decode","json","JSON","parse","oldValue","has","hasOwnProperty","callback","thisArg","keys","push","values","entries","methods","Request","input","options","url","credentials","method","mode","signal","upcased","toUpperCase","normalizeMethod","referrer","form","trim","split","bytes","replace","decodeURIComponent","parseHeaders","rawHeaders","preProcessedHeaders","line","parts","key","Response","bodyInit","status","ok","statusText","clone","response","redirectStatuses","redirect","RangeError","location","DOMException","err","message","stack","create","constructor","fetch","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","getAllResponseHeaders","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","defineProperty","factory","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","module","assign","test1","test2","n","test3","letter","shouldUseNative","target","source","from","symbols","to","val","toObject","s","arguments","require"],"mappings":"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","file":"static/runtime/polyfills-9ff6b9dda47b838b16a0.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.WHATWGFetch = {})));\n}(this, (function (exports) { 'use strict';\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","\"use strict\";require(\"__next_polyfill__fetch\");Object.assign=require('__next_polyfill__object_assign');"],"sourceRoot":""}