{"version":3,"sources":["webpack:///./node_modules/react-fullstory/dist/index.js","webpack:///./node_modules/next/app.js","webpack:///./node_modules/next/dist/pages/_app.js","webpack:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?5a07","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/createClass.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/typeof.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/setPrototypeOf.js","webpack:///./node_modules/@material-ui/core/esm/CssBaseline/CssBaseline.js","webpack:///./node_modules/@sentry/core/esm/integrations/functiontostring.js","webpack:///./node_modules/@sentry/core/esm/integrations/inboundfilters.js","webpack:///./node_modules/@sentry/utils/esm/polyfill.js","webpack:///./node_modules/@sentry/utils/esm/error.js","webpack:///./node_modules/@sentry/utils/esm/dsn.js","webpack:///./node_modules/@sentry/core/esm/api.js","webpack:///./node_modules/@sentry/core/esm/integration.js","webpack:///./node_modules/@sentry/core/esm/baseclient.js","webpack:///./node_modules/@sentry/types/esm/status.js","webpack:///./node_modules/@sentry/core/esm/transports/noop.js","webpack:///./node_modules/@sentry/types/esm/severity.js","webpack:///./node_modules/@sentry/core/esm/basebackend.js","webpack:///./node_modules/@sentry/utils/esm/supports.js","webpack:///./node_modules/@sentry/browser/esm/tracekit.js","webpack:///./node_modules/@sentry/browser/esm/parsers.js","webpack:///./node_modules/@sentry/browser/esm/eventbuilder.js","webpack:///./node_modules/@sentry/utils/esm/promisebuffer.js","webpack:///./node_modules/@sentry/browser/esm/transports/base.js","webpack:///./node_modules/@sentry/browser/esm/transports/fetch.js","webpack:///./node_modules/@sentry/browser/esm/transports/xhr.js","webpack:///./node_modules/@sentry/browser/esm/backend.js","webpack:///./node_modules/@sentry/browser/esm/client.js","webpack:///./node_modules/@sentry/browser/esm/version.js","webpack:///./node_modules/@sentry/browser/esm/helpers.js","webpack:///./node_modules/@sentry/browser/esm/integrations/trycatch.js","webpack:///./node_modules/@sentry/utils/esm/instrument.js","webpack:///./node_modules/@sentry/browser/esm/integrations/breadcrumbs.js","webpack:///./node_modules/@sentry/browser/esm/integrations/globalhandlers.js","webpack:///./node_modules/@sentry/browser/esm/integrations/linkederrors.js","webpack:///./node_modules/@sentry/browser/esm/integrations/useragent.js","webpack:///./node_modules/@sentry/browser/esm/sdk.js","webpack:///./src/config/seo.js","webpack:///./node_modules/@sentry/core/esm/sdk.js","webpack:///./src/pages/_app.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/inherits.js"],"names":["exports","React","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","p","_possibleConstructorReturn","self","call","ReferenceError","_assertThisInitialized","hasOwnProperty","canUseDOM","window","document","createElement","includeFullStory","m","n","e","t","l","console","log","g","a","b","s","q","push","_api","async","crossOrigin","src","_fs_host","y","getElementsByTagName","parentNode","insertBefore","identify","v","uid","setUserVars","event","shutdown","restart","consent","arguments","identifyAccount","acctId","clearUserCookie","getWindowFullStory","FullStoryAPI","fn","_len","args","Array","_key","apply","FullStory","_React$Component","_this","instance","Constructor","TypeError","_classCallCheck","this","org","debug","host","namespace","subClass","superClass","prototype","create","constructor","value","_inherits","protoProps","staticProps","Component","_len10","_key10","concat","_len9","_key9","default","_len8","_key8","getCurrentSessionUrl","_len7","_key7","_len2","_key2","_len6","_key6","_len4","_key4","_len5","_key5","_len3","_key3","factory","__webpack_require__","module","_interopRequireDefault","require","__esModule","Container","process","children","createUrl","_extends2","_asyncToGenerator2","_react","_utils","appGetInitialProps","_x","_appGetInitialProps","_regeneratorRuntime","mark","_callee","_ref","ctx","pageProps","wrap","_context","prev","next","loadGetInitialProps","sent","abrupt","stop","AppInitialProps","App","error","_errorInfo","_this$props","router","url","pathname","asPath","query","back","as","pushTo","href","pushRoute","pushUrl","replace","replaceTo","replaceRoute","replaceUrl","origGetInitialProps","getInitialProps","__NEXT_P","define_property_default","typeof_typeof2","obj","symbol_default","iterator_default","typeof_typeof","getPrototypeOf_getPrototypeOf","set_prototype_of_default","get_prototype_of_default","useStyles","makeStyles","theme","@global","html","WebkitFontSmoothing","MozOsxFontSmoothing","boxSizing","*, *::before, *::after","strong, b","fontWeight","body","esm_extends","margin","color","palette","text","primary","typography","body2","backgroundColor","background","@media print","common","white","&::backdrop","name","originalFunctionToString","CssBaseline_CssBaseline","_props$children","react_default","Fragment","FunctionToString","id","setupOnce","Function","toString","_i","context","__sentry_original__","DEFAULT_IGNORE_ERRORS","inboundfilters_InboundFilters","InboundFilters","_options","esm_scope","hub","esm_hub","getIntegration","client","getClient","clientOptions","getOptions","options","_mergeOptions","_shouldDropEvent","_isSentryError","logger","warn","misc","_isIgnoredError","_isBlacklistedUrl","_getEventFilterUrl","_isWhitelistedUrl","ignoreInternal","exception","values","type","_oO","ignoreErrors","_getPossibleEventMessages","some","message","pattern","string","blacklistUrls","whitelistUrls","tslib_es6","_a","_b","_c","oO","stacktrace","frames_1","frames","filename","frames_2","proto","prop","error_SentryError","_super","SentryError","_newTarget","Error","DSN_REGEX","dsn_Dsn","Dsn","from","_fromString","_fromComponents","_validate","withPassword","path","pass","port","projectId","protocol","user","str","match","exec","slice","split","join","pop","components","forEach","component","isNaN","parseInt","api_API","API","dsn","_dsnObject","getDsn","getStoreEndpoint","_getBaseUrl","getStoreEndpointPath","getStoreEndpointWithUrlEncodedAuth","auth","sentry_key","sentry_version","esm_object","getRequestHeaders","clientName","clientVersion","header","Content-Type","X-Sentry-Auth","getReportDialogEndpoint","dialogOptions","endpoint","encodedOptions","encodeURIComponent","email","installedIntegrations","setupIntegrations","integrations","defaultIntegrations","userIntegrations","isArray","userIntegrationsNames_1","map","pickedIntegrationsNames_1","defaultIntegration","indexOf","userIntegration","integrationsNames","splice","getIntegrationsToSetup","integration","setupIntegration","Status","baseclient_BaseClient","BaseClient","backendClass","_integrations","_processing","_backend","_dsn","_isEnabled","captureException","hint","scope","eventId","event_id","_getBackend","eventFromException","then","_processEvent","finalEvent","reason","captureMessage","level","is","eventFromMessage","captureEvent","flush","timeout","_isClientProcessing","status","clearInterval","interval","getTransport","close","transportFlushed","ready","result","enabled","getIntegrations","syncpromise","resolve","ticked","setInterval","undefined","_prepareEvent","environment","release","dist","maxValueLength","prepared","request","_addIntegrations","sdk","applyToEvent","sdkInfo","integrationsArray","keys","beforeSend","sampleRate","Math","random","reject","data","__sentry__","sendEvent","beforeSendResult","_handleAsyncBeforeSend","originalException","processedEvent","fromHttpCode","code","Success","RateLimit","Invalid","Failed","Unknown","Severity","noop_NoopTransport","NoopTransport","_","Skipped","basebackend_BaseBackend","BaseBackend","_transport","_setupTransport","_exception","_hint","_message","_level","supportsFetch","Headers","Request","Response","isNativeFetch","func","test","supportsReferrerPolicy","referrerPolicy","fromString","Debug","Info","Warning","Fatal","Critical","Log","UNKNOWN_FUNCTION","tracekit_chrome","gecko","winjs","geckoEval","chromeEval","computeStackTrace","ex","stack","popSize","framesToPop","parts","opera10Regex","opera11Regex","lines","line","element","column","extractMessage","computeStackTraceFromStacktraceProp","popFrames","submatch","isNative","columnNumber","computeStackTraceFromStackProp","failed","STACKTRACE_LIMIT","exceptionFromStacktrace","prepareFramesForEvent","eventFromStacktrace","localStack","firstFrameFunction","lastFrameFunction","frame","colno","function","in_app","lineno","reverse","eventFromUnknownInput","syntheticException","domException","name_1","eventFromString","rejection","extra","__serialized__","eventFromPlainObject","synthetic","input","attachStacktrace","promisebuffer_PromiseBuffer","PromiseBuffer","_limit","_buffer","isReady","add","task","remove","drain","capturedSetTimeout","setTimeout","all","clearTimeout","base_BaseTransport","BaseTransport","fetch_global","fetch_FetchTransport","FetchTransport","_disabledUntil","Date","now","Promise","defaultOptions","JSON","stringify","method","fetch","response","headers","get","catch","xhr_XHRTransport","XHRTransport","XMLHttpRequest","onreadystatechange","readyState","getResponseHeader","open","send","backend_BrowserBackend","BrowserBackend","transportOptions","transport","handled","client_BrowserClient","BrowserClient","platform","packages","version","showReportDialog","script","onLoad","onload","head","appendChild","ignoreOnError","shouldIgnoreOnError","before","__sentry_wrapped__","sentryWrapped","wrappedArguments","arg","handleEvent","esm","addEventProcessor","mechanism","property","defineProperties","getOwnPropertyDescriptor","lastHref","trycatch_TryCatch","TryCatch","_ignoreOnError","_wrapTimeFunction","original","originalCallback","_wrapRAF","callback","handler","_wrapEventTarget","global","eventName","bind","err","_wrapXHR","originalSend","wrapOptions","instrument_global","handlers","instrumented","instrument","originalConsoleLevel","triggerHandlers","instrumentConsole","addEventListener","domEventHandler","keypressEventHandler","innerOriginal","instrumentDOM","xhrproto","originalOpen","__sentry_xhr__","toUpperCase","__sentry_own_request__","xhr","commonHandlerData","startTimestamp","onreadystatechangeHandler","status_code","endTimestamp","readyStateArgs","instrumentXHR","doc","sandbox","hidden","contentWindow","removeChild","supportsNativeFetch","originalFetch","fetchData","getFetchMethod","getFetchUrl","instrumentFetch","chrome","isChromePackagedApp","app","runtime","hasHistoryApi","history","pushState","replaceState","supportsHistory","oldOnPopState","onpopstate","historyReplacementFunction","originalHistoryFunction","to","String","location","instrumentHistory","addInstrumentationHandler","e_1","done","e_1_1","return","fetchArgs","keypressTimeout","lastCapturedEvent","debounceDuration","debounceTimer","debounce","tagName","isContentEditable","breadcrumbs_Breadcrumbs","Breadcrumbs","dom","sentry","_consoleBreadcrumb","handlerData","breadcrumb","category","addBreadcrumb","_domBreadcrumb","_xhrBreadcrumb","addSentryBreadcrumb","_fetchBreadcrumb","filterUrl","_historyBreadcrumb","parsedLoc","parsedFrom","parsedTo","relative","serializedData","event_1","parse","globalhandlers_GlobalHandlers","GlobalHandlers","_global","_oldOnErrorHandler","_oldOnUnhandledRejectionHandler","_onErrorHandlerInstalled","_onUnhandledRejectionHandlerInstalled","onerror","onunhandledrejection","stackTraceLimit","_installGlobalOnErrorHandler","_installGlobalOnUnhandledRejectionHandler","msg","currentHub","hasIntegration","isFailedOwnDelivery","_eventFromIncompleteOnError","_enhanceEventWithInitialFrame","_eventFromIncompleteRejection","groups","DEFAULT_KEY","DEFAULT_LIMIT","linkederrors_LinkedErrors","LinkedErrors","limit","_handler","linkedErrors","_walkErrorTree","useragent_global","useragent_UserAgent","UserAgent","navigator","userAgent","sdk_defaultIntegrations","integrations_namespaceObject","seo","title","description","openGraph","locale","site_name","images","window_1","SENTRY_RELEASE","clientClass","enable","bindClient","initAndBind","Sentry","FSATApp","create_default","jssStyles","querySelector","parentElement","modifiedPageProps","_objectSpread","__jsx","StylesProvider","injectFirst","ThemeProvider","build","maxSnack","dist_default","lib","SEO"],"mappings":"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","file":"static/aff6OqNcQV334pz-QVuje/pages/_app.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('react')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'react'], factory) :\n  (global = global || self, factory(global['react-fullstory'] = {}, global.React));\n}(this, function (exports, React) { 'use strict';\n\n  React = React && React.hasOwnProperty('default') ? React['default'] : React;\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) _setPrototypeOf(subClass, superClass);\n  }\n\n  function _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n      return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n  }\n\n  function _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n      o.__proto__ = p;\n      return o;\n    };\n\n    return _setPrototypeOf(o, p);\n  }\n\n  function _assertThisInitialized(self) {\n    if (self === void 0) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return self;\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n      return call;\n    }\n\n    return _assertThisInitialized(self);\n  }\n\n  var initFullStory = (function () {\n    return function (m, n, e, t, l, o, g, y) {\n      if (e in m) {\n        if (m.console && m.console.log) {\n          m.console.log('FullStory namespace conflict. Please set window[\"_fs_namespace\"].');\n        }\n\n        return;\n      }\n\n      g = m[e] = function (a, b, s) {\n        g.q ? g.q.push([a, b, s]) : g._api(a, b, s);\n      };\n\n      g.q = [];\n      o = n.createElement(t);\n      o.async = 1;\n      o.crossOrigin = 'anonymous';\n      o.src = 'https://' + _fs_host + '/s/fs.js';\n      y = n.getElementsByTagName(t)[0];\n      y.parentNode.insertBefore(o, y);\n\n      g.identify = function (i, v, s) {\n        g(l, {\n          uid: i\n        }, s);\n        if (v) g(l, v, s);\n      };\n\n      g.setUserVars = function (v, s) {\n        g(l, v, s);\n      };\n\n      g.event = function (i, v, s) {\n        g('event', {\n          n: i,\n          p: v\n        }, s);\n      };\n\n      g.shutdown = function () {\n        g('rec', !1);\n      };\n\n      g.restart = function () {\n        g('rec', !0);\n      };\n\n      g.log = function (a, b) {\n        g('log', [a, b]);\n      };\n\n      g.consent = function (a) {\n        g('consent', !arguments.length || a);\n      };\n\n      g.identifyAccount = function (i, v) {\n        o = 'account';\n        v = v || {};\n        v.acctId = i;\n        g(o, v);\n      };\n\n      g.clearUserCookie = function () {};\n    }(window, document, window['_fs_namespace'], 'script', 'user');\n  });\n\n  var initMockFullStory = (function () {\n    window[window['_fs_namespace']] = {\n      identify: function identify() {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        return {\n          method: 'identify',\n          args: args\n        };\n      },\n      setUserVars: function setUserVars() {\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        return {\n          method: 'setUserVars',\n          args: args\n        };\n      },\n      event: function event() {\n        for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          args[_key3] = arguments[_key3];\n        }\n\n        return {\n          method: 'event',\n          args: args\n        };\n      },\n      shutdown: function shutdown() {\n        for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n          args[_key4] = arguments[_key4];\n        }\n\n        return {\n          method: 'shutdown',\n          args: args\n        };\n      },\n      restart: function restart() {\n        for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n          args[_key5] = arguments[_key5];\n        }\n\n        return {\n          method: 'restart',\n          args: args\n        };\n      },\n      log: function log() {\n        for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n          args[_key6] = arguments[_key6];\n        }\n\n        return {\n          method: 'log',\n          args: args\n        };\n      },\n      consent: function consent() {\n        for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n          args[_key7] = arguments[_key7];\n        }\n\n        return {\n          method: 'consent',\n          args: args\n        };\n      },\n      identifyAccount: function identifyAccount() {\n        for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n          args[_key8] = arguments[_key8];\n        }\n\n        return {\n          method: 'identifyAccount',\n          args: args\n        };\n      },\n      clearUserCookie: function clearUserCookie() {\n        for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n          args[_key9] = arguments[_key9];\n        }\n\n        return {\n          method: 'clearUserCookie',\n          args: args\n        };\n      }\n    };\n  });\n\n  var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n  var includeFullStory = process.env.NODE_ENV !== 'test' ? initFullStory : initMockFullStory;\n  var getWindowFullStory = function getWindowFullStory() {\n    return window[window['_fs_namespace']];\n  };\n  var FullStoryAPI = function FullStoryAPI(fn) {\n    if (canUseDOM && getWindowFullStory()) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      return getWindowFullStory()[fn].apply(null, args);\n    }\n\n    return false;\n  };\n  var identify = function identify() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return FullStoryAPI.apply(void 0, ['identify'].concat(args));\n  };\n  var shutdown = function shutdown() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return FullStoryAPI.apply(void 0, ['shutdown'].concat(args));\n  };\n  var restart = function restart() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return FullStoryAPI.apply(void 0, ['restart'].concat(args));\n  };\n  var setUserVars = function setUserVars() {\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n\n    return FullStoryAPI.apply(void 0, ['setUserVars'].concat(args));\n  };\n  var log = function log() {\n    for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      args[_key6] = arguments[_key6];\n    }\n\n    return FullStoryAPI.apply(void 0, ['log'].concat(args));\n  };\n  var getCurrentSessionUrl = function getCurrentSessionUrl() {\n    for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      args[_key7] = arguments[_key7];\n    }\n\n    return FullStoryAPI.apply(void 0, ['getCurrentSessionUrl'].concat(args));\n  };\n  var event = function event() {\n    for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n      args[_key8] = arguments[_key8];\n    }\n\n    return FullStoryAPI.apply(void 0, ['event'].concat(args));\n  };\n  var consent = function consent() {\n    for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n      args[_key9] = arguments[_key9];\n    }\n\n    return FullStoryAPI.apply(void 0, ['consent'].concat(args));\n  };\n  var clearUserCookie = function clearUserCookie() {\n    for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n      args[_key10] = arguments[_key10];\n    }\n\n    return FullStoryAPI.apply(void 0, ['clearUserCookie'].concat(args));\n  };\n\n  var FullStory =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inherits(FullStory, _React$Component);\n\n    function FullStory(props) {\n      var _this;\n\n      _classCallCheck(this, FullStory);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(FullStory).call(this, props));\n      var org = props.org,\n          debug = props.debug,\n          host = props.host,\n          namespace = props.namespace;\n\n      if (!org || !canUseDOM) {\n        return _possibleConstructorReturn(_this);\n      }\n\n      if (!getWindowFullStory()) {\n        window['_fs_debug'] = debug || false;\n        window['_fs_host'] = host || 'fullstory.com';\n        window['_fs_org'] = org;\n        window['_fs_namespace'] = namespace || 'FS';\n        includeFullStory();\n      }\n\n      return _this;\n    }\n\n    _createClass(FullStory, [{\n      key: \"shouldComponentUpdate\",\n      value: function shouldComponentUpdate() {\n        return false;\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        if (!canUseDOM || !getWindowFullStory()) return false;\n        getWindowFullStory().shutdown();\n        delete window[window['_fs_namespace']];\n        delete window['_fs_debug'];\n        delete window['_fs_host'];\n        delete window['_fs_org'];\n        delete window['_fs_namespace'];\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        return false;\n      }\n    }]);\n\n    return FullStory;\n  }(React.Component);\n\n  exports.FullStoryAPI = FullStoryAPI;\n  exports.clearUserCookie = clearUserCookie;\n  exports.consent = consent;\n  exports.default = FullStory;\n  exports.event = event;\n  exports.getCurrentSessionUrl = getCurrentSessionUrl;\n  exports.getWindowFullStory = getWindowFullStory;\n  exports.identify = identify;\n  exports.log = log;\n  exports.restart = restart;\n  exports.setUserVars = setUserVars;\n  exports.shutdown = shutdown;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=index.js.map\n","module.exports = require('./dist/pages/_app')\n","\"use strict\";var _interopRequireDefault=require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");exports.__esModule=true;exports.Container=Container;exports.createUrl=createUrl;exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/extends\"));var _asyncToGenerator2=_interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/asyncToGenerator\"));var _react=_interopRequireDefault(require(\"react\"));var _utils=require(\"../next-server/lib/utils\");exports.AppInitialProps=_utils.AppInitialProps;/**\n * `App` component is used for initialize of pages. It allows for overwriting and full control of the `page` initialization.\n * This allows for keeping state between navigation, custom error handling, injecting additional data.\n */function appGetInitialProps(_x){return _appGetInitialProps.apply(this,arguments);}function _appGetInitialProps(){_appGetInitialProps=(0,_asyncToGenerator2.default)(function*(_ref){var{Component,ctx}=_ref;var pageProps=yield(0,_utils.loadGetInitialProps)(Component,ctx);return{pageProps};});return _appGetInitialProps.apply(this,arguments);}class App extends _react.default.Component{// Kept here for backwards compatibility.\n// When someone ended App they could call `super.componentDidCatch`.\n// @deprecated This method is no longer needed. Errors are caught at the top level\ncomponentDidCatch(error,_errorInfo){throw error;}render(){var{router,Component,pageProps}=this.props;var url=createUrl(router);return _react.default.createElement(Component,(0,_extends2.default)({},pageProps,{url:url}));}}exports.default=App;App.origGetInitialProps=appGetInitialProps;App.getInitialProps=appGetInitialProps;var warnContainer;var warnUrl;if(process.env.NODE_ENV!=='production'){warnContainer=(0,_utils.execOnce)(()=>{console.warn(\"Warning: the `Container` in `_app` has been deprecated and should be removed. https://err.sh/zeit/next.js/app-container-deprecated\");});warnUrl=(0,_utils.execOnce)(()=>{console.error(\"Warning: the 'url' property is deprecated. https://err.sh/zeit/next.js/url-deprecated\");});}// @deprecated noop for now until removal\nfunction Container(p){if(process.env.NODE_ENV!=='production')warnContainer();return p.children;}function createUrl(router){// This is to make sure we don't references the router object at call time\nvar{pathname,asPath,query}=router;return{get query(){if(process.env.NODE_ENV!=='production')warnUrl();return query;},get pathname(){if(process.env.NODE_ENV!=='production')warnUrl();return pathname;},get asPath(){if(process.env.NODE_ENV!=='production')warnUrl();return asPath;},back:()=>{if(process.env.NODE_ENV!=='production')warnUrl();router.back();},push:(url,as)=>{if(process.env.NODE_ENV!=='production')warnUrl();return router.push(url,as);},pushTo:(href,as)=>{if(process.env.NODE_ENV!=='production')warnUrl();var pushRoute=as?href:'';var pushUrl=as||href;return router.push(pushRoute,pushUrl);},replace:(url,as)=>{if(process.env.NODE_ENV!=='production')warnUrl();return router.replace(url,as);},replaceTo:(href,as)=>{if(process.env.NODE_ENV!=='production')warnUrl();var replaceRoute=as?href:'';var replaceUrl=as||href;return router.replace(replaceRoute,replaceUrl);}};}","\n    (window.__NEXT_P=window.__NEXT_P||[]).push([\"/_app\", function() {\n      var mod = require(\"private-next-pages/_app.js\")\n      if(module.hot) {\n        module.hot.accept(\"private-next-pages/_app.js\", function() {\n          if(!next.router.components[\"/_app\"]) return\n          var updatedPage = require(\"private-next-pages/_app.js\")\n          next.router.update(\"/_app\", updatedPage)\n        })\n      }\n      return mod\n    }]);\n  ","import _Object$defineProperty from \"../../core-js/object/define-property\";\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n\n    _Object$defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import _Symbol$iterator from \"../../core-js/symbol/iterator\";\nimport _Symbol from \"../../core-js/symbol\";\n\nfunction _typeof2(obj) { if (typeof _Symbol === \"function\" && typeof _Symbol$iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof _Symbol === \"function\" && obj.constructor === _Symbol && obj !== _Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof _Symbol === \"function\" && _typeof2(_Symbol$iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof _Symbol === \"function\" && obj.constructor === _Symbol && obj !== _Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import _Object$getPrototypeOf from \"../../core-js/object/get-prototype-of\";\nimport _Object$setPrototypeOf from \"../../core-js/object/set-prototype-of\";\nexport default function _getPrototypeOf(o) {\n  _getPrototypeOf = _Object$setPrototypeOf ? _Object$getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || _Object$getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import _Object$setPrototypeOf from \"../../core-js/object/set-prototype-of\";\nexport default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = _Object$setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport makeStyles from '../styles/makeStyles';\nimport { exactProp } from '@material-ui/utils';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    '@global': {\n      html: {\n        WebkitFontSmoothing: 'antialiased',\n        // Antialiasing.\n        MozOsxFontSmoothing: 'grayscale',\n        // Antialiasing.\n        // Change from `box-sizing: content-box` so that `width`\n        // is not affected by `padding` or `border`.\n        boxSizing: 'border-box'\n      },\n      '*, *::before, *::after': {\n        boxSizing: 'inherit'\n      },\n      'strong, b': {\n        fontWeight: 'bolder'\n      },\n      body: _extends({\n        margin: 0,\n        // Remove the margin in all browsers.\n        color: theme.palette.text.primary\n      }, theme.typography.body2, {\n        backgroundColor: theme.palette.background.default,\n        '@media print': {\n          // Save printer ink.\n          backgroundColor: theme.palette.common.white\n        },\n        // Add support for document.body.requestFullScreen().\n        // Other elements, if background transparent, are not supported.\n        '&::backdrop': {\n          backgroundColor: theme.palette.background.default\n        }\n      })\n    }\n  };\n}, {\n  name: 'MuiCssBaseline'\n});\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\n\nfunction CssBaseline(props) {\n  var _props$children = props.children,\n      children = _props$children === void 0 ? null : _props$children;\n  useStyles();\n  return React.createElement(React.Fragment, null, children);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes = {\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  CssBaseline['propTypes' + ''] = exactProp(CssBaseline.propTypes);\n}\n\nexport default CssBaseline;","var originalFunctionToString;\n/** Patch toString calls to return proper name for wrapped functions */\nvar FunctionToString = /** @class */ (function () {\n    function FunctionToString() {\n        /**\n         * @inheritDoc\n         */\n        this.name = FunctionToString.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    FunctionToString.prototype.setupOnce = function () {\n        originalFunctionToString = Function.prototype.toString;\n        Function.prototype.toString = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var context = this.__sentry_original__ || this;\n            // tslint:disable-next-line:no-unsafe-any\n            return originalFunctionToString.apply(context, args);\n        };\n    };\n    /**\n     * @inheritDoc\n     */\n    FunctionToString.id = 'FunctionToString';\n    return FunctionToString;\n}());\nexport { FunctionToString };\n//# sourceMappingURL=functiontostring.js.map","import * as tslib_1 from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { getEventDescription, isMatchingPattern, logger } from '@sentry/utils';\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nvar DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n/** Inbound filters configurable by the user */\nvar InboundFilters = /** @class */ (function () {\n    function InboundFilters(_options) {\n        if (_options === void 0) { _options = {}; }\n        this._options = _options;\n        /**\n         * @inheritDoc\n         */\n        this.name = InboundFilters.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    InboundFilters.prototype.setupOnce = function () {\n        addGlobalEventProcessor(function (event) {\n            var hub = getCurrentHub();\n            if (!hub) {\n                return event;\n            }\n            var self = hub.getIntegration(InboundFilters);\n            if (self) {\n                var client = hub.getClient();\n                var clientOptions = client ? client.getOptions() : {};\n                var options = self._mergeOptions(clientOptions);\n                if (self._shouldDropEvent(event, options)) {\n                    return null;\n                }\n            }\n            return event;\n        });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._shouldDropEvent = function (event, options) {\n        if (this._isSentryError(event, options)) {\n            logger.warn(\"Event dropped due to being internal Sentry Error.\\nEvent: \" + getEventDescription(event));\n            return true;\n        }\n        if (this._isIgnoredError(event, options)) {\n            logger.warn(\"Event dropped due to being matched by `ignoreErrors` option.\\nEvent: \" + getEventDescription(event));\n            return true;\n        }\n        if (this._isBlacklistedUrl(event, options)) {\n            logger.warn(\"Event dropped due to being matched by `blacklistUrls` option.\\nEvent: \" + getEventDescription(event) + \".\\nUrl: \" + this._getEventFilterUrl(event));\n            return true;\n        }\n        if (!this._isWhitelistedUrl(event, options)) {\n            logger.warn(\"Event dropped due to not being matched by `whitelistUrls` option.\\nEvent: \" + getEventDescription(event) + \".\\nUrl: \" + this._getEventFilterUrl(event));\n            return true;\n        }\n        return false;\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isSentryError = function (event, options) {\n        if (options === void 0) { options = {}; }\n        if (!options.ignoreInternal) {\n            return false;\n        }\n        try {\n            return ((event &&\n                event.exception &&\n                event.exception.values &&\n                event.exception.values[0] &&\n                event.exception.values[0].type === 'SentryError') ||\n                false);\n        }\n        catch (_oO) {\n            return false;\n        }\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isIgnoredError = function (event, options) {\n        if (options === void 0) { options = {}; }\n        if (!options.ignoreErrors || !options.ignoreErrors.length) {\n            return false;\n        }\n        return this._getPossibleEventMessages(event).some(function (message) {\n            // Not sure why TypeScript complains here...\n            return options.ignoreErrors.some(function (pattern) { return isMatchingPattern(message, pattern); });\n        });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isBlacklistedUrl = function (event, options) {\n        if (options === void 0) { options = {}; }\n        // TODO: Use Glob instead?\n        if (!options.blacklistUrls || !options.blacklistUrls.length) {\n            return false;\n        }\n        var url = this._getEventFilterUrl(event);\n        return !url ? false : options.blacklistUrls.some(function (pattern) { return isMatchingPattern(url, pattern); });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isWhitelistedUrl = function (event, options) {\n        if (options === void 0) { options = {}; }\n        // TODO: Use Glob instead?\n        if (!options.whitelistUrls || !options.whitelistUrls.length) {\n            return true;\n        }\n        var url = this._getEventFilterUrl(event);\n        return !url ? true : options.whitelistUrls.some(function (pattern) { return isMatchingPattern(url, pattern); });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._mergeOptions = function (clientOptions) {\n        if (clientOptions === void 0) { clientOptions = {}; }\n        return {\n            blacklistUrls: tslib_1.__spread((this._options.blacklistUrls || []), (clientOptions.blacklistUrls || [])),\n            ignoreErrors: tslib_1.__spread((this._options.ignoreErrors || []), (clientOptions.ignoreErrors || []), DEFAULT_IGNORE_ERRORS),\n            ignoreInternal: typeof this._options.ignoreInternal !== 'undefined' ? this._options.ignoreInternal : true,\n            whitelistUrls: tslib_1.__spread((this._options.whitelistUrls || []), (clientOptions.whitelistUrls || [])),\n        };\n    };\n    /** JSDoc */\n    InboundFilters.prototype._getPossibleEventMessages = function (event) {\n        if (event.message) {\n            return [event.message];\n        }\n        if (event.exception) {\n            try {\n                var _a = (event.exception.values && event.exception.values[0]) || {}, _b = _a.type, type = _b === void 0 ? '' : _b, _c = _a.value, value = _c === void 0 ? '' : _c;\n                return [\"\" + value, type + \": \" + value];\n            }\n            catch (oO) {\n                logger.error(\"Cannot extract message for event \" + getEventDescription(event));\n                return [];\n            }\n        }\n        return [];\n    };\n    /** JSDoc */\n    InboundFilters.prototype._getEventFilterUrl = function (event) {\n        try {\n            if (event.stacktrace) {\n                var frames_1 = event.stacktrace.frames;\n                return (frames_1 && frames_1[frames_1.length - 1].filename) || null;\n            }\n            if (event.exception) {\n                var frames_2 = event.exception.values && event.exception.values[0].stacktrace && event.exception.values[0].stacktrace.frames;\n                return (frames_2 && frames_2[frames_2.length - 1].filename) || null;\n            }\n            return null;\n        }\n        catch (oO) {\n            logger.error(\"Cannot extract url for event \" + getEventDescription(event));\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    InboundFilters.id = 'InboundFilters';\n    return InboundFilters;\n}());\nexport { InboundFilters };\n//# sourceMappingURL=inboundfilters.js.map","export var setPrototypeOf = Object.setPrototypeOf || ({ __proto__: [] } instanceof Array ? setProtoOf : mixinProperties); // tslint:disable-line:no-unbound-method\n/**\n * setPrototypeOf polyfill using __proto__\n */\nfunction setProtoOf(obj, proto) {\n    // @ts-ignore\n    obj.__proto__ = proto;\n    return obj;\n}\n/**\n * setPrototypeOf polyfill using mixin\n */\nfunction mixinProperties(obj, proto) {\n    for (var prop in proto) {\n        if (!obj.hasOwnProperty(prop)) {\n            // @ts-ignore\n            obj[prop] = proto[prop];\n        }\n    }\n    return obj;\n}\n//# sourceMappingURL=polyfill.js.map","import * as tslib_1 from \"tslib\";\nimport { setPrototypeOf } from './polyfill';\n/** An error emitted by Sentry SDKs and related utilities. */\nvar SentryError = /** @class */ (function (_super) {\n    tslib_1.__extends(SentryError, _super);\n    function SentryError(message) {\n        var _newTarget = this.constructor;\n        var _this = _super.call(this, message) || this;\n        _this.message = message;\n        // tslint:disable:no-unsafe-any\n        _this.name = _newTarget.prototype.constructor.name;\n        setPrototypeOf(_this, _newTarget.prototype);\n        return _this;\n    }\n    return SentryError;\n}(Error));\nexport { SentryError };\n//# sourceMappingURL=error.js.map","import * as tslib_1 from \"tslib\";\nimport { SentryError } from './error';\n/** Regular expression used to parse a Dsn. */\nvar DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+))?@)([\\w\\.-]+)(?::(\\d+))?\\/(.+)/;\n/** Error message */\nvar ERROR_MESSAGE = 'Invalid Dsn';\n/** The Sentry Dsn, identifying a Sentry instance and project. */\nvar Dsn = /** @class */ (function () {\n    /** Creates a new Dsn component */\n    function Dsn(from) {\n        if (typeof from === 'string') {\n            this._fromString(from);\n        }\n        else {\n            this._fromComponents(from);\n        }\n        this._validate();\n    }\n    /**\n     * Renders the string representation of this Dsn.\n     *\n     * By default, this will render the public representation without the password\n     * component. To get the deprecated private _representation, set `withPassword`\n     * to true.\n     *\n     * @param withPassword When set to true, the password will be included.\n     */\n    Dsn.prototype.toString = function (withPassword) {\n        if (withPassword === void 0) { withPassword = false; }\n        // tslint:disable-next-line:no-this-assignment\n        var _a = this, host = _a.host, path = _a.path, pass = _a.pass, port = _a.port, projectId = _a.projectId, protocol = _a.protocol, user = _a.user;\n        return (protocol + \"://\" + user + (withPassword && pass ? \":\" + pass : '') +\n            (\"@\" + host + (port ? \":\" + port : '') + \"/\" + (path ? path + \"/\" : path) + projectId));\n    };\n    /** Parses a string into this Dsn. */\n    Dsn.prototype._fromString = function (str) {\n        var match = DSN_REGEX.exec(str);\n        if (!match) {\n            throw new SentryError(ERROR_MESSAGE);\n        }\n        var _a = tslib_1.__read(match.slice(1), 6), protocol = _a[0], user = _a[1], _b = _a[2], pass = _b === void 0 ? '' : _b, host = _a[3], _c = _a[4], port = _c === void 0 ? '' : _c, lastPath = _a[5];\n        var path = '';\n        var projectId = lastPath;\n        var split = projectId.split('/');\n        if (split.length > 1) {\n            path = split.slice(0, -1).join('/');\n            projectId = split.pop();\n        }\n        this._fromComponents({ host: host, pass: pass, path: path, projectId: projectId, port: port, protocol: protocol, user: user });\n    };\n    /** Maps Dsn components into this instance. */\n    Dsn.prototype._fromComponents = function (components) {\n        this.protocol = components.protocol;\n        this.user = components.user;\n        this.pass = components.pass || '';\n        this.host = components.host;\n        this.port = components.port || '';\n        this.path = components.path || '';\n        this.projectId = components.projectId;\n    };\n    /** Validates this Dsn and throws on error. */\n    Dsn.prototype._validate = function () {\n        var _this = this;\n        ['protocol', 'user', 'host', 'projectId'].forEach(function (component) {\n            if (!_this[component]) {\n                throw new SentryError(ERROR_MESSAGE);\n            }\n        });\n        if (this.protocol !== 'http' && this.protocol !== 'https') {\n            throw new SentryError(ERROR_MESSAGE);\n        }\n        if (this.port && isNaN(parseInt(this.port, 10))) {\n            throw new SentryError(ERROR_MESSAGE);\n        }\n    };\n    return Dsn;\n}());\nexport { Dsn };\n//# sourceMappingURL=dsn.js.map","import { Dsn, timestampWithMs, urlEncode } from '@sentry/utils';\nvar SENTRY_API_VERSION = '7';\n/** Helper class to provide urls to different Sentry endpoints. */\nvar API = /** @class */ (function () {\n    /** Create a new instance of API */\n    function API(dsn) {\n        this.dsn = dsn;\n        this._dsnObject = new Dsn(dsn);\n    }\n    /** Returns the Dsn object. */\n    API.prototype.getDsn = function () {\n        return this._dsnObject;\n    };\n    /** Returns a string with auth headers in the url to the store endpoint. */\n    API.prototype.getStoreEndpoint = function () {\n        return \"\" + this._getBaseUrl() + this.getStoreEndpointPath();\n    };\n    /** Returns the store endpoint with auth added in url encoded. */\n    API.prototype.getStoreEndpointWithUrlEncodedAuth = function () {\n        var dsn = this._dsnObject;\n        var auth = {\n            sentry_key: dsn.user,\n            sentry_version: SENTRY_API_VERSION,\n        };\n        // Auth is intentionally sent as part of query string (NOT as custom HTTP header)\n        // to avoid preflight CORS requests\n        return this.getStoreEndpoint() + \"?\" + urlEncode(auth);\n    };\n    /** Returns the base path of the url including the port. */\n    API.prototype._getBaseUrl = function () {\n        var dsn = this._dsnObject;\n        var protocol = dsn.protocol ? dsn.protocol + \":\" : '';\n        var port = dsn.port ? \":\" + dsn.port : '';\n        return protocol + \"//\" + dsn.host + port;\n    };\n    /** Returns only the path component for the store endpoint. */\n    API.prototype.getStoreEndpointPath = function () {\n        var dsn = this._dsnObject;\n        return (dsn.path ? \"/\" + dsn.path : '') + \"/api/\" + dsn.projectId + \"/store/\";\n    };\n    /** Returns an object that can be used in request headers. */\n    API.prototype.getRequestHeaders = function (clientName, clientVersion) {\n        var dsn = this._dsnObject;\n        var header = [\"Sentry sentry_version=\" + SENTRY_API_VERSION];\n        header.push(\"sentry_timestamp=\" + timestampWithMs()); // TODO: This can be removed\n        header.push(\"sentry_client=\" + clientName + \"/\" + clientVersion);\n        header.push(\"sentry_key=\" + dsn.user);\n        if (dsn.pass) {\n            header.push(\"sentry_secret=\" + dsn.pass);\n        }\n        return {\n            'Content-Type': 'application/json',\n            'X-Sentry-Auth': header.join(', '),\n        };\n    };\n    /** Returns the url to the report dialog endpoint. */\n    API.prototype.getReportDialogEndpoint = function (dialogOptions) {\n        if (dialogOptions === void 0) { dialogOptions = {}; }\n        var dsn = this._dsnObject;\n        var endpoint = \"\" + this._getBaseUrl() + (dsn.path ? \"/\" + dsn.path : '') + \"/api/embed/error-page/\";\n        var encodedOptions = [];\n        encodedOptions.push(\"dsn=\" + dsn.toString());\n        for (var key in dialogOptions) {\n            if (key === 'user') {\n                if (!dialogOptions.user) {\n                    continue;\n                }\n                if (dialogOptions.user.name) {\n                    encodedOptions.push(\"name=\" + encodeURIComponent(dialogOptions.user.name));\n                }\n                if (dialogOptions.user.email) {\n                    encodedOptions.push(\"email=\" + encodeURIComponent(dialogOptions.user.email));\n                }\n            }\n            else {\n                encodedOptions.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(dialogOptions[key]));\n            }\n        }\n        if (encodedOptions.length) {\n            return endpoint + \"?\" + encodedOptions.join('&');\n        }\n        return endpoint;\n    };\n    return API;\n}());\nexport { API };\n//# sourceMappingURL=api.js.map","import * as tslib_1 from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { logger } from '@sentry/utils';\nexport var installedIntegrations = [];\n/** Gets integration to install */\nexport function getIntegrationsToSetup(options) {\n    var defaultIntegrations = (options.defaultIntegrations && tslib_1.__spread(options.defaultIntegrations)) || [];\n    var userIntegrations = options.integrations;\n    var integrations = [];\n    if (Array.isArray(userIntegrations)) {\n        var userIntegrationsNames_1 = userIntegrations.map(function (i) { return i.name; });\n        var pickedIntegrationsNames_1 = [];\n        // Leave only unique default integrations, that were not overridden with provided user integrations\n        defaultIntegrations.forEach(function (defaultIntegration) {\n            if (userIntegrationsNames_1.indexOf(defaultIntegration.name) === -1 &&\n                pickedIntegrationsNames_1.indexOf(defaultIntegration.name) === -1) {\n                integrations.push(defaultIntegration);\n                pickedIntegrationsNames_1.push(defaultIntegration.name);\n            }\n        });\n        // Don't add same user integration twice\n        userIntegrations.forEach(function (userIntegration) {\n            if (pickedIntegrationsNames_1.indexOf(userIntegration.name) === -1) {\n                integrations.push(userIntegration);\n                pickedIntegrationsNames_1.push(userIntegration.name);\n            }\n        });\n    }\n    else if (typeof userIntegrations === 'function') {\n        integrations = userIntegrations(defaultIntegrations);\n        integrations = Array.isArray(integrations) ? integrations : [integrations];\n    }\n    else {\n        integrations = tslib_1.__spread(defaultIntegrations);\n    }\n    // Make sure that if present, `Debug` integration will always run last\n    var integrationsNames = integrations.map(function (i) { return i.name; });\n    var alwaysLastToRun = 'Debug';\n    if (integrationsNames.indexOf(alwaysLastToRun) !== -1) {\n        integrations.push.apply(integrations, tslib_1.__spread(integrations.splice(integrationsNames.indexOf(alwaysLastToRun), 1)));\n    }\n    return integrations;\n}\n/** Setup given integration */\nexport function setupIntegration(integration) {\n    if (installedIntegrations.indexOf(integration.name) !== -1) {\n        return;\n    }\n    integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n    installedIntegrations.push(integration.name);\n    logger.log(\"Integration installed: \" + integration.name);\n}\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nexport function setupIntegrations(options) {\n    var integrations = {};\n    getIntegrationsToSetup(options).forEach(function (integration) {\n        integrations[integration.name] = integration;\n        setupIntegration(integration);\n    });\n    return integrations;\n}\n//# sourceMappingURL=integration.js.map","import * as tslib_1 from \"tslib\";\nimport { Dsn, isPrimitive, isThenable, logger, SyncPromise, truncate, uuid4 } from '@sentry/utils';\nimport { setupIntegrations } from './integration';\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding backend constructor and options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}. Also, the Backend instance is available via\n * {@link Client.getBackend}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event via the backend, it is passed through\n * {@link BaseClient.prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeBackend, NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(NodeBackend, options);\n *   }\n *\n *   // ...\n * }\n */\nvar BaseClient = /** @class */ (function () {\n    /**\n     * Initializes this client instance.\n     *\n     * @param backendClass A constructor function to create the backend.\n     * @param options Options for the client.\n     */\n    function BaseClient(backendClass, options) {\n        /** Array of used integrations. */\n        this._integrations = {};\n        /** Is the client still processing a call? */\n        this._processing = false;\n        this._backend = new backendClass(options);\n        this._options = options;\n        if (options.dsn) {\n            this._dsn = new Dsn(options.dsn);\n        }\n        if (this._isEnabled()) {\n            this._integrations = setupIntegrations(this._options);\n        }\n    }\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureException = function (exception, hint, scope) {\n        var _this = this;\n        var eventId = hint && hint.event_id;\n        this._processing = true;\n        this._getBackend()\n            .eventFromException(exception, hint)\n            .then(function (event) { return _this._processEvent(event, hint, scope); })\n            .then(function (finalEvent) {\n            // We need to check for finalEvent in case beforeSend returned null\n            eventId = finalEvent && finalEvent.event_id;\n            _this._processing = false;\n        })\n            .then(null, function (reason) {\n            logger.error(reason);\n            _this._processing = false;\n        });\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureMessage = function (message, level, hint, scope) {\n        var _this = this;\n        var eventId = hint && hint.event_id;\n        this._processing = true;\n        var promisedEvent = isPrimitive(message)\n            ? this._getBackend().eventFromMessage(\"\" + message, level, hint)\n            : this._getBackend().eventFromException(message, hint);\n        promisedEvent\n            .then(function (event) { return _this._processEvent(event, hint, scope); })\n            .then(function (finalEvent) {\n            // We need to check for finalEvent in case beforeSend returned null\n            eventId = finalEvent && finalEvent.event_id;\n            _this._processing = false;\n        })\n            .then(null, function (reason) {\n            logger.error(reason);\n            _this._processing = false;\n        });\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureEvent = function (event, hint, scope) {\n        var _this = this;\n        var eventId = hint && hint.event_id;\n        this._processing = true;\n        this._processEvent(event, hint, scope)\n            .then(function (finalEvent) {\n            // We need to check for finalEvent in case beforeSend returned null\n            eventId = finalEvent && finalEvent.event_id;\n            _this._processing = false;\n        })\n            .then(null, function (reason) {\n            logger.error(reason);\n            _this._processing = false;\n        });\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getDsn = function () {\n        return this._dsn;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getOptions = function () {\n        return this._options;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.flush = function (timeout) {\n        var _this = this;\n        return this._isClientProcessing(timeout).then(function (status) {\n            clearInterval(status.interval);\n            return _this._getBackend()\n                .getTransport()\n                .close(timeout)\n                .then(function (transportFlushed) { return status.ready && transportFlushed; });\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.close = function (timeout) {\n        var _this = this;\n        return this.flush(timeout).then(function (result) {\n            _this.getOptions().enabled = false;\n            return result;\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getIntegrations = function () {\n        return this._integrations || {};\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getIntegration = function (integration) {\n        try {\n            return this._integrations[integration.id] || null;\n        }\n        catch (_oO) {\n            logger.warn(\"Cannot retrieve integration \" + integration.id + \" from the current Client\");\n            return null;\n        }\n    };\n    /** Waits for the client to be done with processing. */\n    BaseClient.prototype._isClientProcessing = function (timeout) {\n        var _this = this;\n        return new SyncPromise(function (resolve) {\n            var ticked = 0;\n            var tick = 1;\n            var interval = 0;\n            clearInterval(interval);\n            interval = setInterval(function () {\n                if (!_this._processing) {\n                    resolve({\n                        interval: interval,\n                        ready: true,\n                    });\n                }\n                else {\n                    ticked += tick;\n                    if (timeout && ticked >= timeout) {\n                        resolve({\n                            interval: interval,\n                            ready: false,\n                        });\n                    }\n                }\n            }, tick);\n        });\n    };\n    /** Returns the current backend. */\n    BaseClient.prototype._getBackend = function () {\n        return this._backend;\n    };\n    /** Determines whether this SDK is enabled and a valid Dsn is present. */\n    BaseClient.prototype._isEnabled = function () {\n        return this.getOptions().enabled !== false && this._dsn !== undefined;\n    };\n    /**\n     * Adds common information to events.\n     *\n     * The information includes release and environment from `options`,\n     * breadcrumbs and context (extra, tags and user) from the scope.\n     *\n     * Information that is already present in the event is never overwritten. For\n     * nested objects, such as the context, keys are merged.\n     *\n     * @param event The original event.\n     * @param hint May contain additional informartion about the original exception.\n     * @param scope A scope containing event metadata.\n     * @returns A new event with more information.\n     */\n    BaseClient.prototype._prepareEvent = function (event, scope, hint) {\n        var _a = this.getOptions(), environment = _a.environment, release = _a.release, dist = _a.dist, _b = _a.maxValueLength, maxValueLength = _b === void 0 ? 250 : _b;\n        var prepared = tslib_1.__assign({}, event);\n        if (prepared.environment === undefined && environment !== undefined) {\n            prepared.environment = environment;\n        }\n        if (prepared.release === undefined && release !== undefined) {\n            prepared.release = release;\n        }\n        if (prepared.dist === undefined && dist !== undefined) {\n            prepared.dist = dist;\n        }\n        if (prepared.message) {\n            prepared.message = truncate(prepared.message, maxValueLength);\n        }\n        var exception = prepared.exception && prepared.exception.values && prepared.exception.values[0];\n        if (exception && exception.value) {\n            exception.value = truncate(exception.value, maxValueLength);\n        }\n        var request = prepared.request;\n        if (request && request.url) {\n            request.url = truncate(request.url, maxValueLength);\n        }\n        if (prepared.event_id === undefined) {\n            prepared.event_id = uuid4();\n        }\n        this._addIntegrations(prepared.sdk);\n        // We prepare the result here with a resolved Event.\n        var result = SyncPromise.resolve(prepared);\n        // This should be the last thing called, since we want that\n        // {@link Hub.addEventProcessor} gets the finished prepared event.\n        if (scope) {\n            // In case we have a hub we reassign it.\n            result = scope.applyToEvent(prepared, hint);\n        }\n        return result;\n    };\n    /**\n     * This function adds all used integrations to the SDK info in the event.\n     * @param sdkInfo The sdkInfo of the event that will be filled with all integrations.\n     */\n    BaseClient.prototype._addIntegrations = function (sdkInfo) {\n        var integrationsArray = Object.keys(this._integrations);\n        if (sdkInfo && integrationsArray.length > 0) {\n            sdkInfo.integrations = integrationsArray;\n        }\n    };\n    /**\n     * Processes an event (either error or message) and sends it to Sentry.\n     *\n     * This also adds breadcrumbs and context information to the event. However,\n     * platform specific meta data (such as the User's IP address) must be added\n     * by the SDK implementor.\n     *\n     *\n     * @param event The event to send to Sentry.\n     * @param hint May contain additional informartion about the original exception.\n     * @param scope A scope containing event metadata.\n     * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n     */\n    BaseClient.prototype._processEvent = function (event, hint, scope) {\n        var _this = this;\n        var _a = this.getOptions(), beforeSend = _a.beforeSend, sampleRate = _a.sampleRate;\n        if (!this._isEnabled()) {\n            return SyncPromise.reject('SDK not enabled, will not send event.');\n        }\n        // 1.0 === 100% events are sent\n        // 0.0 === 0% events are sent\n        if (typeof sampleRate === 'number' && Math.random() > sampleRate) {\n            return SyncPromise.reject('This event has been sampled, will not send event.');\n        }\n        return new SyncPromise(function (resolve, reject) {\n            _this._prepareEvent(event, scope, hint)\n                .then(function (prepared) {\n                if (prepared === null) {\n                    reject('An event processor returned null, will not send event.');\n                    return;\n                }\n                var finalEvent = prepared;\n                try {\n                    var isInternalException = hint && hint.data && hint.data.__sentry__ === true;\n                    if (isInternalException || !beforeSend) {\n                        _this._getBackend().sendEvent(finalEvent);\n                        resolve(finalEvent);\n                        return;\n                    }\n                    var beforeSendResult = beforeSend(prepared, hint);\n                    // tslint:disable-next-line:strict-type-predicates\n                    if (typeof beforeSendResult === 'undefined') {\n                        logger.error('`beforeSend` method has to return `null` or a valid event.');\n                    }\n                    else if (isThenable(beforeSendResult)) {\n                        _this._handleAsyncBeforeSend(beforeSendResult, resolve, reject);\n                    }\n                    else {\n                        finalEvent = beforeSendResult;\n                        if (finalEvent === null) {\n                            logger.log('`beforeSend` returned `null`, will not send event.');\n                            resolve(null);\n                            return;\n                        }\n                        // From here on we are really async\n                        _this._getBackend().sendEvent(finalEvent);\n                        resolve(finalEvent);\n                    }\n                }\n                catch (exception) {\n                    _this.captureException(exception, {\n                        data: {\n                            __sentry__: true,\n                        },\n                        originalException: exception,\n                    });\n                    reject('`beforeSend` threw an error, will not send event.');\n                }\n            })\n                .then(null, function () {\n                reject('`beforeSend` threw an error, will not send event.');\n            });\n        });\n    };\n    /**\n     * Resolves before send Promise and calls resolve/reject on parent SyncPromise.\n     */\n    BaseClient.prototype._handleAsyncBeforeSend = function (beforeSend, resolve, reject) {\n        var _this = this;\n        beforeSend\n            .then(function (processedEvent) {\n            if (processedEvent === null) {\n                reject('`beforeSend` returned `null`, will not send event.');\n                return;\n            }\n            // From here on we are really async\n            _this._getBackend().sendEvent(processedEvent);\n            resolve(processedEvent);\n        })\n            .then(null, function (e) {\n            reject(\"beforeSend rejected with \" + e);\n        });\n    };\n    return BaseClient;\n}());\nexport { BaseClient };\n//# sourceMappingURL=baseclient.js.map","/** The status of an event. */\nexport var Status;\n(function (Status) {\n    /** The status could not be determined. */\n    Status[\"Unknown\"] = \"unknown\";\n    /** The event was skipped due to configuration or callbacks. */\n    Status[\"Skipped\"] = \"skipped\";\n    /** The event was sent to Sentry successfully. */\n    Status[\"Success\"] = \"success\";\n    /** The client is currently rate limited and will try again later. */\n    Status[\"RateLimit\"] = \"rate_limit\";\n    /** The event could not be processed. */\n    Status[\"Invalid\"] = \"invalid\";\n    /** A server-side error ocurred during submission. */\n    Status[\"Failed\"] = \"failed\";\n})(Status || (Status = {}));\n// tslint:disable:completed-docs\n// tslint:disable:no-unnecessary-qualifier no-namespace\n(function (Status) {\n    /**\n     * Converts a HTTP status code into a {@link Status}.\n     *\n     * @param code The HTTP response status code.\n     * @returns The send status or {@link Status.Unknown}.\n     */\n    function fromHttpCode(code) {\n        if (code >= 200 && code < 300) {\n            return Status.Success;\n        }\n        if (code === 429) {\n            return Status.RateLimit;\n        }\n        if (code >= 400 && code < 500) {\n            return Status.Invalid;\n        }\n        if (code >= 500) {\n            return Status.Failed;\n        }\n        return Status.Unknown;\n    }\n    Status.fromHttpCode = fromHttpCode;\n})(Status || (Status = {}));\n//# sourceMappingURL=status.js.map","import { Status } from '@sentry/types';\nimport { SyncPromise } from '@sentry/utils';\n/** Noop transport */\nvar NoopTransport = /** @class */ (function () {\n    function NoopTransport() {\n    }\n    /**\n     * @inheritDoc\n     */\n    NoopTransport.prototype.sendEvent = function (_) {\n        return SyncPromise.resolve({\n            reason: \"NoopTransport: Event has been skipped because no Dsn is configured.\",\n            status: Status.Skipped,\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    NoopTransport.prototype.close = function (_) {\n        return SyncPromise.resolve(true);\n    };\n    return NoopTransport;\n}());\nexport { NoopTransport };\n//# sourceMappingURL=noop.js.map","/** JSDoc */\nexport var Severity;\n(function (Severity) {\n    /** JSDoc */\n    Severity[\"Fatal\"] = \"fatal\";\n    /** JSDoc */\n    Severity[\"Error\"] = \"error\";\n    /** JSDoc */\n    Severity[\"Warning\"] = \"warning\";\n    /** JSDoc */\n    Severity[\"Log\"] = \"log\";\n    /** JSDoc */\n    Severity[\"Info\"] = \"info\";\n    /** JSDoc */\n    Severity[\"Debug\"] = \"debug\";\n    /** JSDoc */\n    Severity[\"Critical\"] = \"critical\";\n})(Severity || (Severity = {}));\n// tslint:disable:completed-docs\n// tslint:disable:no-unnecessary-qualifier no-namespace\n(function (Severity) {\n    /**\n     * Converts a string-based level into a {@link Severity}.\n     *\n     * @param level string representation of Severity\n     * @returns Severity\n     */\n    function fromString(level) {\n        switch (level) {\n            case 'debug':\n                return Severity.Debug;\n            case 'info':\n                return Severity.Info;\n            case 'warn':\n            case 'warning':\n                return Severity.Warning;\n            case 'error':\n                return Severity.Error;\n            case 'fatal':\n                return Severity.Fatal;\n            case 'critical':\n                return Severity.Critical;\n            case 'log':\n            default:\n                return Severity.Log;\n        }\n    }\n    Severity.fromString = fromString;\n})(Severity || (Severity = {}));\n//# sourceMappingURL=severity.js.map","import { logger, SentryError } from '@sentry/utils';\nimport { NoopTransport } from './transports/noop';\n/**\n * This is the base implemention of a Backend.\n * @hidden\n */\nvar BaseBackend = /** @class */ (function () {\n    /** Creates a new backend instance. */\n    function BaseBackend(options) {\n        this._options = options;\n        if (!this._options.dsn) {\n            logger.warn('No DSN provided, backend will not do anything.');\n        }\n        this._transport = this._setupTransport();\n    }\n    /**\n     * Sets up the transport so it can be used later to send requests.\n     */\n    BaseBackend.prototype._setupTransport = function () {\n        return new NoopTransport();\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.eventFromException = function (_exception, _hint) {\n        throw new SentryError('Backend has to implement `eventFromException` method');\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.eventFromMessage = function (_message, _level, _hint) {\n        throw new SentryError('Backend has to implement `eventFromMessage` method');\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.sendEvent = function (event) {\n        this._transport.sendEvent(event).then(null, function (reason) {\n            logger.error(\"Error while sending event: \" + reason);\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.getTransport = function () {\n        return this._transport;\n    };\n    return BaseBackend;\n}());\nexport { BaseBackend };\n//# sourceMappingURL=basebackend.js.map","import { logger } from './logger';\nimport { getGlobalObject } from './misc';\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsErrorEvent() {\n    try {\n        // tslint:disable:no-unused-expression\n        new ErrorEvent('');\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMError() {\n    try {\n        // It really needs 1 argument, not 0.\n        // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n        // 1 argument required, but only 0 present.\n        // @ts-ignore\n        // tslint:disable:no-unused-expression\n        new DOMError('');\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMException() {\n    try {\n        // tslint:disable:no-unused-expression\n        new DOMException('');\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsFetch() {\n    if (!('fetch' in getGlobalObject())) {\n        return false;\n    }\n    try {\n        // tslint:disable-next-line:no-unused-expression\n        new Headers();\n        // tslint:disable-next-line:no-unused-expression\n        new Request('');\n        // tslint:disable-next-line:no-unused-expression\n        new Response();\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\nfunction isNativeFetch(func) {\n    return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nexport function supportsNativeFetch() {\n    if (!supportsFetch()) {\n        return false;\n    }\n    var global = getGlobalObject();\n    // Fast path to avoid DOM I/O\n    // tslint:disable-next-line:no-unbound-method\n    if (isNativeFetch(global.fetch)) {\n        return true;\n    }\n    // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n    // so create a \"pure\" iframe to see if that has native fetch\n    var result = false;\n    var doc = global.document;\n    if (doc) {\n        var sandbox = doc.createElement('iframe');\n        sandbox.hidden = true;\n        try {\n            doc.head.appendChild(sandbox);\n            if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n                // tslint:disable-next-line:no-unbound-method\n                result = isNativeFetch(sandbox.contentWindow.fetch);\n            }\n            doc.head.removeChild(sandbox);\n        }\n        catch (err) {\n            logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n        }\n    }\n    return result;\n}\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReportingObserver() {\n    // tslint:disable-next-line: no-unsafe-any\n    return 'ReportingObserver' in getGlobalObject();\n}\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReferrerPolicy() {\n    // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n    // https://caniuse.com/#feat=referrer-policy\n    // It doesn't. And it throw exception instead of ignoring this parameter...\n    // REF: https://github.com/getsentry/raven-js/issues/1233\n    if (!supportsFetch()) {\n        return false;\n    }\n    try {\n        // tslint:disable:no-unused-expression\n        new Request('_', {\n            referrerPolicy: 'origin',\n        });\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsHistory() {\n    // NOTE: in Chrome App environment, touching history.pushState, *even inside\n    //       a try/catch block*, will cause Chrome to output an error to console.error\n    // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n    var global = getGlobalObject();\n    var chrome = global.chrome;\n    // tslint:disable-next-line:no-unsafe-any\n    var isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n    var hasHistoryApi = 'history' in global && !!global.history.pushState && !!global.history.replaceState;\n    return !isChromePackagedApp && hasHistoryApi;\n}\n//# sourceMappingURL=supports.js.map","// tslint:disable:object-literal-sort-keys\nimport * as tslib_1 from \"tslib\";\n// global reference to slice\nvar UNKNOWN_FUNCTION = '?';\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\nvar chrome = /^\\s*at (?:(.*?) ?\\()?((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|[-a-z]+:|\\/).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nvar gecko = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension).*?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js))(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nvar winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\nvar geckoEval = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\nvar chromeEval = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n/** JSDoc */\nexport function computeStackTrace(ex) {\n    // tslint:disable:no-unsafe-any\n    var stack = null;\n    var popSize = ex && ex.framesToPop;\n    try {\n        // This must be tried first because Opera 10 *destroys*\n        // its stacktrace property if you try to access the stack\n        // property first!!\n        stack = computeStackTraceFromStacktraceProp(ex);\n        if (stack) {\n            return popFrames(stack, popSize);\n        }\n    }\n    catch (e) {\n        // no-empty\n    }\n    try {\n        stack = computeStackTraceFromStackProp(ex);\n        if (stack) {\n            return popFrames(stack, popSize);\n        }\n    }\n    catch (e) {\n        // no-empty\n    }\n    return {\n        message: extractMessage(ex),\n        name: ex && ex.name,\n        stack: [],\n        failed: true,\n    };\n}\n/** JSDoc */\n// tslint:disable-next-line:cyclomatic-complexity\nfunction computeStackTraceFromStackProp(ex) {\n    // tslint:disable:no-conditional-assignment\n    if (!ex || !ex.stack) {\n        return null;\n    }\n    var stack = [];\n    var lines = ex.stack.split('\\n');\n    var isEval;\n    var submatch;\n    var parts;\n    var element;\n    for (var i = 0; i < lines.length; ++i) {\n        if ((parts = chrome.exec(lines[i]))) {\n            var isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n            isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n            if (isEval && (submatch = chromeEval.exec(parts[2]))) {\n                // throw out eval line/column and use top-most line/column number\n                parts[2] = submatch[1]; // url\n                parts[3] = submatch[2]; // line\n                parts[4] = submatch[3]; // column\n            }\n            element = {\n                url: parts[2],\n                func: parts[1] || UNKNOWN_FUNCTION,\n                args: isNative ? [parts[2]] : [],\n                line: parts[3] ? +parts[3] : null,\n                column: parts[4] ? +parts[4] : null,\n            };\n        }\n        else if ((parts = winjs.exec(lines[i]))) {\n            element = {\n                url: parts[2],\n                func: parts[1] || UNKNOWN_FUNCTION,\n                args: [],\n                line: +parts[3],\n                column: parts[4] ? +parts[4] : null,\n            };\n        }\n        else if ((parts = gecko.exec(lines[i]))) {\n            isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n            if (isEval && (submatch = geckoEval.exec(parts[3]))) {\n                // throw out eval line/column and use top-most line number\n                parts[1] = parts[1] || \"eval\";\n                parts[3] = submatch[1];\n                parts[4] = submatch[2];\n                parts[5] = ''; // no column when eval\n            }\n            else if (i === 0 && !parts[5] && ex.columnNumber !== void 0) {\n                // FireFox uses this awesome columnNumber property for its top frame\n                // Also note, Firefox's column number is 0-based and everything else expects 1-based,\n                // so adding 1\n                // NOTE: this hack doesn't work if top-most frame is eval\n                stack[0].column = ex.columnNumber + 1;\n            }\n            element = {\n                url: parts[3],\n                func: parts[1] || UNKNOWN_FUNCTION,\n                args: parts[2] ? parts[2].split(',') : [],\n                line: parts[4] ? +parts[4] : null,\n                column: parts[5] ? +parts[5] : null,\n            };\n        }\n        else {\n            continue;\n        }\n        if (!element.func && element.line) {\n            element.func = UNKNOWN_FUNCTION;\n        }\n        stack.push(element);\n    }\n    if (!stack.length) {\n        return null;\n    }\n    return {\n        message: extractMessage(ex),\n        name: ex.name,\n        stack: stack,\n    };\n}\n/** JSDoc */\nfunction computeStackTraceFromStacktraceProp(ex) {\n    if (!ex || !ex.stacktrace) {\n        return null;\n    }\n    // Access and store the stacktrace property before doing ANYTHING\n    // else to it because Opera is not very good at providing it\n    // reliably in other circumstances.\n    var stacktrace = ex.stacktrace;\n    var opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n    var opera11Regex = / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^\\)]+))\\((.*)\\))? in (.*):\\s*$/i;\n    var lines = stacktrace.split('\\n');\n    var stack = [];\n    var parts;\n    for (var line = 0; line < lines.length; line += 2) {\n        // tslint:disable:no-conditional-assignment\n        var element = null;\n        if ((parts = opera10Regex.exec(lines[line]))) {\n            element = {\n                url: parts[2],\n                func: parts[3],\n                args: [],\n                line: +parts[1],\n                column: null,\n            };\n        }\n        else if ((parts = opera11Regex.exec(lines[line]))) {\n            element = {\n                url: parts[6],\n                func: parts[3] || parts[4],\n                args: parts[5] ? parts[5].split(',') : [],\n                line: +parts[1],\n                column: +parts[2],\n            };\n        }\n        if (element) {\n            if (!element.func && element.line) {\n                element.func = UNKNOWN_FUNCTION;\n            }\n            stack.push(element);\n        }\n    }\n    if (!stack.length) {\n        return null;\n    }\n    return {\n        message: extractMessage(ex),\n        name: ex.name,\n        stack: stack,\n    };\n}\n/** Remove N number of frames from the stack */\nfunction popFrames(stacktrace, popSize) {\n    try {\n        return tslib_1.__assign({}, stacktrace, { stack: stacktrace.stack.slice(popSize) });\n    }\n    catch (e) {\n        return stacktrace;\n    }\n}\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nfunction extractMessage(ex) {\n    var message = ex && ex.message;\n    if (!message) {\n        return 'No error message';\n    }\n    if (message.error && typeof message.error.message === 'string') {\n        return message.error.message;\n    }\n    return message;\n}\n//# sourceMappingURL=tracekit.js.map","import { extractExceptionKeysForMessage, isEvent, normalizeToSize } from '@sentry/utils';\nimport { computeStackTrace } from './tracekit';\nvar STACKTRACE_LIMIT = 50;\n/**\n * This function creates an exception from an TraceKitStackTrace\n * @param stacktrace TraceKitStackTrace that will be converted to an exception\n * @hidden\n */\nexport function exceptionFromStacktrace(stacktrace) {\n    var frames = prepareFramesForEvent(stacktrace.stack);\n    var exception = {\n        type: stacktrace.name,\n        value: stacktrace.message,\n    };\n    if (frames && frames.length) {\n        exception.stacktrace = { frames: frames };\n    }\n    // tslint:disable-next-line:strict-type-predicates\n    if (exception.type === undefined && exception.value === '') {\n        exception.value = 'Unrecoverable error caught';\n    }\n    return exception;\n}\n/**\n * @hidden\n */\nexport function eventFromPlainObject(exception, syntheticException, rejection) {\n    var event = {\n        exception: {\n            values: [\n                {\n                    type: isEvent(exception) ? exception.constructor.name : rejection ? 'UnhandledRejection' : 'Error',\n                    value: \"Non-Error \" + (rejection ? 'promise rejection' : 'exception') + \" captured with keys: \" + extractExceptionKeysForMessage(exception),\n                },\n            ],\n        },\n        extra: {\n            __serialized__: normalizeToSize(exception),\n        },\n    };\n    if (syntheticException) {\n        var stacktrace = computeStackTrace(syntheticException);\n        var frames_1 = prepareFramesForEvent(stacktrace.stack);\n        event.stacktrace = {\n            frames: frames_1,\n        };\n    }\n    return event;\n}\n/**\n * @hidden\n */\nexport function eventFromStacktrace(stacktrace) {\n    var exception = exceptionFromStacktrace(stacktrace);\n    return {\n        exception: {\n            values: [exception],\n        },\n    };\n}\n/**\n * @hidden\n */\nexport function prepareFramesForEvent(stack) {\n    if (!stack || !stack.length) {\n        return [];\n    }\n    var localStack = stack;\n    var firstFrameFunction = localStack[0].func || '';\n    var lastFrameFunction = localStack[localStack.length - 1].func || '';\n    // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n    if (firstFrameFunction.indexOf('captureMessage') !== -1 || firstFrameFunction.indexOf('captureException') !== -1) {\n        localStack = localStack.slice(1);\n    }\n    // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n    if (lastFrameFunction.indexOf('sentryWrapped') !== -1) {\n        localStack = localStack.slice(0, -1);\n    }\n    // The frame where the crash happened, should be the last entry in the array\n    return localStack\n        .map(function (frame) { return ({\n        colno: frame.column === null ? undefined : frame.column,\n        filename: frame.url || localStack[0].url,\n        function: frame.func || '?',\n        in_app: true,\n        lineno: frame.line === null ? undefined : frame.line,\n    }); })\n        .slice(0, STACKTRACE_LIMIT)\n        .reverse();\n}\n//# sourceMappingURL=parsers.js.map","import { addExceptionMechanism, addExceptionTypeValue, isDOMError, isDOMException, isError, isErrorEvent, isEvent, isPlainObject, } from '@sentry/utils';\nimport { eventFromPlainObject, eventFromStacktrace, prepareFramesForEvent } from './parsers';\nimport { computeStackTrace } from './tracekit';\n/** JSDoc */\nexport function eventFromUnknownInput(exception, syntheticException, options) {\n    if (options === void 0) { options = {}; }\n    var event;\n    if (isErrorEvent(exception) && exception.error) {\n        // If it is an ErrorEvent with `error` property, extract it to get actual Error\n        var errorEvent = exception;\n        exception = errorEvent.error; // tslint:disable-line:no-parameter-reassignment\n        event = eventFromStacktrace(computeStackTrace(exception));\n        return event;\n    }\n    if (isDOMError(exception) || isDOMException(exception)) {\n        // If it is a DOMError or DOMException (which are legacy APIs, but still supported in some browsers)\n        // then we just extract the name and message, as they don't provide anything else\n        // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n        // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n        var domException = exception;\n        var name_1 = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n        var message = domException.message ? name_1 + \": \" + domException.message : name_1;\n        event = eventFromString(message, syntheticException, options);\n        addExceptionTypeValue(event, message);\n        return event;\n    }\n    if (isError(exception)) {\n        // we have a real Error object, do nothing\n        event = eventFromStacktrace(computeStackTrace(exception));\n        return event;\n    }\n    if (isPlainObject(exception) || isEvent(exception)) {\n        // If it is plain Object or Event, serialize it manually and extract options\n        // This will allow us to group events based on top-level keys\n        // which is much better than creating new group when any key/value change\n        var objectException = exception;\n        event = eventFromPlainObject(objectException, syntheticException, options.rejection);\n        addExceptionMechanism(event, {\n            synthetic: true,\n        });\n        return event;\n    }\n    // If none of previous checks were valid, then it means that it's not:\n    // - an instance of DOMError\n    // - an instance of DOMException\n    // - an instance of Event\n    // - an instance of Error\n    // - a valid ErrorEvent (one with an error property)\n    // - a plain Object\n    //\n    // So bail out and capture it as a simple message:\n    event = eventFromString(exception, syntheticException, options);\n    addExceptionTypeValue(event, \"\" + exception, undefined);\n    addExceptionMechanism(event, {\n        synthetic: true,\n    });\n    return event;\n}\n// this._options.attachStacktrace\n/** JSDoc */\nexport function eventFromString(input, syntheticException, options) {\n    if (options === void 0) { options = {}; }\n    var event = {\n        message: input,\n    };\n    if (options.attachStacktrace && syntheticException) {\n        var stacktrace = computeStackTrace(syntheticException);\n        var frames_1 = prepareFramesForEvent(stacktrace.stack);\n        event.stacktrace = {\n            frames: frames_1,\n        };\n    }\n    return event;\n}\n//# sourceMappingURL=eventbuilder.js.map","import { SentryError } from './error';\nimport { SyncPromise } from './syncpromise';\n/** A simple queue that holds promises. */\nvar PromiseBuffer = /** @class */ (function () {\n    function PromiseBuffer(_limit) {\n        this._limit = _limit;\n        /** Internal set of queued Promises */\n        this._buffer = [];\n    }\n    /**\n     * Says if the buffer is ready to take more requests\n     */\n    PromiseBuffer.prototype.isReady = function () {\n        return this._limit === undefined || this.length() < this._limit;\n    };\n    /**\n     * Add a promise to the queue.\n     *\n     * @param task Can be any PromiseLike<T>\n     * @returns The original promise.\n     */\n    PromiseBuffer.prototype.add = function (task) {\n        var _this = this;\n        if (!this.isReady()) {\n            return SyncPromise.reject(new SentryError('Not adding Promise due to buffer limit reached.'));\n        }\n        if (this._buffer.indexOf(task) === -1) {\n            this._buffer.push(task);\n        }\n        task\n            .then(function () { return _this.remove(task); })\n            .then(null, function () {\n            return _this.remove(task).then(null, function () {\n                // We have to add this catch here otherwise we have an unhandledPromiseRejection\n                // because it's a new Promise chain.\n            });\n        });\n        return task;\n    };\n    /**\n     * Remove a promise to the queue.\n     *\n     * @param task Can be any PromiseLike<T>\n     * @returns Removed promise.\n     */\n    PromiseBuffer.prototype.remove = function (task) {\n        var removedTask = this._buffer.splice(this._buffer.indexOf(task), 1)[0];\n        return removedTask;\n    };\n    /**\n     * This function returns the number of unresolved promises in the queue.\n     */\n    PromiseBuffer.prototype.length = function () {\n        return this._buffer.length;\n    };\n    /**\n     * This will drain the whole queue, returns true if queue is empty or drained.\n     * If timeout is provided and the queue takes longer to drain, the promise still resolves but with false.\n     *\n     * @param timeout Number in ms to wait until it resolves with false.\n     */\n    PromiseBuffer.prototype.drain = function (timeout) {\n        var _this = this;\n        return new SyncPromise(function (resolve) {\n            var capturedSetTimeout = setTimeout(function () {\n                if (timeout && timeout > 0) {\n                    resolve(false);\n                }\n            }, timeout);\n            SyncPromise.all(_this._buffer)\n                .then(function () {\n                clearTimeout(capturedSetTimeout);\n                resolve(true);\n            })\n                .then(null, function () {\n                resolve(true);\n            });\n        });\n    };\n    return PromiseBuffer;\n}());\nexport { PromiseBuffer };\n//# sourceMappingURL=promisebuffer.js.map","import { API } from '@sentry/core';\nimport { PromiseBuffer, SentryError } from '@sentry/utils';\n/** Base Transport class implementation */\nvar BaseTransport = /** @class */ (function () {\n    function BaseTransport(options) {\n        this.options = options;\n        /** A simple buffer holding all requests. */\n        this._buffer = new PromiseBuffer(30);\n        this.url = new API(this.options.dsn).getStoreEndpointWithUrlEncodedAuth();\n    }\n    /**\n     * @inheritDoc\n     */\n    BaseTransport.prototype.sendEvent = function (_) {\n        throw new SentryError('Transport Class has to implement `sendEvent` method');\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseTransport.prototype.close = function (timeout) {\n        return this._buffer.drain(timeout);\n    };\n    return BaseTransport;\n}());\nexport { BaseTransport };\n//# sourceMappingURL=base.js.map","import * as tslib_1 from \"tslib\";\nimport { Status } from '@sentry/types';\nimport { getGlobalObject, logger, parseRetryAfterHeader, supportsReferrerPolicy, SyncPromise } from '@sentry/utils';\nimport { BaseTransport } from './base';\nvar global = getGlobalObject();\n/** `fetch` based transport */\nvar FetchTransport = /** @class */ (function (_super) {\n    tslib_1.__extends(FetchTransport, _super);\n    function FetchTransport() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** Locks transport after receiving 429 response */\n        _this._disabledUntil = new Date(Date.now());\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    FetchTransport.prototype.sendEvent = function (event) {\n        var _this = this;\n        if (new Date(Date.now()) < this._disabledUntil) {\n            return Promise.reject({\n                event: event,\n                reason: \"Transport locked till \" + this._disabledUntil + \" due to too many requests.\",\n                status: 429,\n            });\n        }\n        var defaultOptions = {\n            body: JSON.stringify(event),\n            method: 'POST',\n            // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n            // https://caniuse.com/#feat=referrer-policy\n            // It doesn't. And it throw exception instead of ignoring this parameter...\n            // REF: https://github.com/getsentry/raven-js/issues/1233\n            referrerPolicy: (supportsReferrerPolicy() ? 'origin' : ''),\n        };\n        return this._buffer.add(new SyncPromise(function (resolve, reject) {\n            global\n                .fetch(_this.url, defaultOptions)\n                .then(function (response) {\n                var status = Status.fromHttpCode(response.status);\n                if (status === Status.Success) {\n                    resolve({ status: status });\n                    return;\n                }\n                if (status === Status.RateLimit) {\n                    var now = Date.now();\n                    _this._disabledUntil = new Date(now + parseRetryAfterHeader(now, response.headers.get('Retry-After')));\n                    logger.warn(\"Too many requests, backing off till: \" + _this._disabledUntil);\n                }\n                reject(response);\n            })\n                .catch(reject);\n        }));\n    };\n    return FetchTransport;\n}(BaseTransport));\nexport { FetchTransport };\n//# sourceMappingURL=fetch.js.map","import * as tslib_1 from \"tslib\";\nimport { Status } from '@sentry/types';\nimport { logger, parseRetryAfterHeader, SyncPromise } from '@sentry/utils';\nimport { BaseTransport } from './base';\n/** `XHR` based transport */\nvar XHRTransport = /** @class */ (function (_super) {\n    tslib_1.__extends(XHRTransport, _super);\n    function XHRTransport() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** Locks transport after receiving 429 response */\n        _this._disabledUntil = new Date(Date.now());\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    XHRTransport.prototype.sendEvent = function (event) {\n        var _this = this;\n        if (new Date(Date.now()) < this._disabledUntil) {\n            return Promise.reject({\n                event: event,\n                reason: \"Transport locked till \" + this._disabledUntil + \" due to too many requests.\",\n                status: 429,\n            });\n        }\n        return this._buffer.add(new SyncPromise(function (resolve, reject) {\n            var request = new XMLHttpRequest();\n            request.onreadystatechange = function () {\n                if (request.readyState !== 4) {\n                    return;\n                }\n                var status = Status.fromHttpCode(request.status);\n                if (status === Status.Success) {\n                    resolve({ status: status });\n                    return;\n                }\n                if (status === Status.RateLimit) {\n                    var now = Date.now();\n                    _this._disabledUntil = new Date(now + parseRetryAfterHeader(now, request.getResponseHeader('Retry-After')));\n                    logger.warn(\"Too many requests, backing off till: \" + _this._disabledUntil);\n                }\n                reject(request);\n            };\n            request.open('POST', _this.url);\n            request.send(JSON.stringify(event));\n        }));\n    };\n    return XHRTransport;\n}(BaseTransport));\nexport { XHRTransport };\n//# sourceMappingURL=xhr.js.map","import * as tslib_1 from \"tslib\";\nimport { BaseBackend } from '@sentry/core';\nimport { Severity } from '@sentry/types';\nimport { addExceptionMechanism, supportsFetch, SyncPromise } from '@sentry/utils';\nimport { eventFromString, eventFromUnknownInput } from './eventbuilder';\nimport { FetchTransport, XHRTransport } from './transports';\n/**\n * The Sentry Browser SDK Backend.\n * @hidden\n */\nvar BrowserBackend = /** @class */ (function (_super) {\n    tslib_1.__extends(BrowserBackend, _super);\n    function BrowserBackend() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    BrowserBackend.prototype._setupTransport = function () {\n        if (!this._options.dsn) {\n            // We return the noop transport here in case there is no Dsn.\n            return _super.prototype._setupTransport.call(this);\n        }\n        var transportOptions = tslib_1.__assign({}, this._options.transportOptions, { dsn: this._options.dsn });\n        if (this._options.transport) {\n            return new this._options.transport(transportOptions);\n        }\n        if (supportsFetch()) {\n            return new FetchTransport(transportOptions);\n        }\n        return new XHRTransport(transportOptions);\n    };\n    /**\n     * @inheritDoc\n     */\n    BrowserBackend.prototype.eventFromException = function (exception, hint) {\n        var syntheticException = (hint && hint.syntheticException) || undefined;\n        var event = eventFromUnknownInput(exception, syntheticException, {\n            attachStacktrace: this._options.attachStacktrace,\n        });\n        addExceptionMechanism(event, {\n            handled: true,\n            type: 'generic',\n        });\n        event.level = Severity.Error;\n        if (hint && hint.event_id) {\n            event.event_id = hint.event_id;\n        }\n        return SyncPromise.resolve(event);\n    };\n    /**\n     * @inheritDoc\n     */\n    BrowserBackend.prototype.eventFromMessage = function (message, level, hint) {\n        if (level === void 0) { level = Severity.Info; }\n        var syntheticException = (hint && hint.syntheticException) || undefined;\n        var event = eventFromString(message, syntheticException, {\n            attachStacktrace: this._options.attachStacktrace,\n        });\n        event.level = level;\n        if (hint && hint.event_id) {\n            event.event_id = hint.event_id;\n        }\n        return SyncPromise.resolve(event);\n    };\n    return BrowserBackend;\n}(BaseBackend));\nexport { BrowserBackend };\n//# sourceMappingURL=backend.js.map","import * as tslib_1 from \"tslib\";\nimport { API, BaseClient } from '@sentry/core';\nimport { getGlobalObject, logger } from '@sentry/utils';\nimport { BrowserBackend } from './backend';\nimport { SDK_NAME, SDK_VERSION } from './version';\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nvar BrowserClient = /** @class */ (function (_super) {\n    tslib_1.__extends(BrowserClient, _super);\n    /**\n     * Creates a new Browser SDK instance.\n     *\n     * @param options Configuration options for this SDK.\n     */\n    function BrowserClient(options) {\n        if (options === void 0) { options = {}; }\n        return _super.call(this, BrowserBackend, options) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    BrowserClient.prototype._prepareEvent = function (event, scope, hint) {\n        event.platform = event.platform || 'javascript';\n        event.sdk = tslib_1.__assign({}, event.sdk, { name: SDK_NAME, packages: tslib_1.__spread(((event.sdk && event.sdk.packages) || []), [\n                {\n                    name: 'npm:@sentry/browser',\n                    version: SDK_VERSION,\n                },\n            ]), version: SDK_VERSION });\n        return _super.prototype._prepareEvent.call(this, event, scope, hint);\n    };\n    /**\n     * Show a report dialog to the user to send feedback to a specific event.\n     *\n     * @param options Set individual options for the dialog\n     */\n    BrowserClient.prototype.showReportDialog = function (options) {\n        if (options === void 0) { options = {}; }\n        // doesn't work without a document (React Native)\n        var document = getGlobalObject().document;\n        if (!document) {\n            return;\n        }\n        if (!this._isEnabled()) {\n            logger.error('Trying to call showReportDialog with Sentry Client is disabled');\n            return;\n        }\n        var dsn = options.dsn || this.getDsn();\n        if (!options.eventId) {\n            logger.error('Missing `eventId` option in showReportDialog call');\n            return;\n        }\n        if (!dsn) {\n            logger.error('Missing `Dsn` option in showReportDialog call');\n            return;\n        }\n        var script = document.createElement('script');\n        script.async = true;\n        script.src = new API(dsn).getReportDialogEndpoint(options);\n        if (options.onLoad) {\n            script.onload = options.onLoad;\n        }\n        (document.head || document.body).appendChild(script);\n    };\n    return BrowserClient;\n}(BaseClient));\nexport { BrowserClient };\n//# sourceMappingURL=client.js.map","export var SDK_NAME = 'sentry.javascript.browser';\nexport var SDK_VERSION = '5.10.2';\n//# sourceMappingURL=version.js.map","import * as tslib_1 from \"tslib\";\nimport { captureException, withScope } from '@sentry/core';\nimport { addExceptionMechanism, addExceptionTypeValue, normalize } from '@sentry/utils';\nvar ignoreOnError = 0;\n/**\n * @hidden\n */\nexport function shouldIgnoreOnError() {\n    return ignoreOnError > 0;\n}\n/**\n * @hidden\n */\nexport function ignoreNextOnError() {\n    // onerror should trigger before setTimeout\n    ignoreOnError += 1;\n    setTimeout(function () {\n        ignoreOnError -= 1;\n    });\n}\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap.\n * @returns The wrapped function.\n * @hidden\n */\nexport function wrap(fn, options, before) {\n    if (options === void 0) { options = {}; }\n    // tslint:disable-next-line:strict-type-predicates\n    if (typeof fn !== 'function') {\n        return fn;\n    }\n    try {\n        // We don't wanna wrap it twice\n        if (fn.__sentry__) {\n            return fn;\n        }\n        // If this has already been wrapped in the past, return that wrapped function\n        if (fn.__sentry_wrapped__) {\n            return fn.__sentry_wrapped__;\n        }\n    }\n    catch (e) {\n        // Just accessing custom props in some Selenium environments\n        // can cause a \"Permission denied\" exception (see raven-js#495).\n        // Bail on wrapping and return the function as-is (defers to window.onerror).\n        return fn;\n    }\n    var sentryWrapped = function () {\n        var args = Array.prototype.slice.call(arguments);\n        // tslint:disable:no-unsafe-any\n        try {\n            // tslint:disable-next-line:strict-type-predicates\n            if (before && typeof before === 'function') {\n                before.apply(this, arguments);\n            }\n            var wrappedArguments = args.map(function (arg) { return wrap(arg, options); });\n            if (fn.handleEvent) {\n                // Attempt to invoke user-land function\n                // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n                //       means the sentry.javascript SDK caught an error invoking your application code. This\n                //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n                return fn.handleEvent.apply(this, wrappedArguments);\n            }\n            // Attempt to invoke user-land function\n            // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n            //       means the sentry.javascript SDK caught an error invoking your application code. This\n            //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n            return fn.apply(this, wrappedArguments);\n            // tslint:enable:no-unsafe-any\n        }\n        catch (ex) {\n            ignoreNextOnError();\n            withScope(function (scope) {\n                scope.addEventProcessor(function (event) {\n                    var processedEvent = tslib_1.__assign({}, event);\n                    if (options.mechanism) {\n                        addExceptionTypeValue(processedEvent, undefined, undefined);\n                        addExceptionMechanism(processedEvent, options.mechanism);\n                    }\n                    processedEvent.extra = tslib_1.__assign({}, processedEvent.extra, { arguments: normalize(args, 3) });\n                    return processedEvent;\n                });\n                captureException(ex);\n            });\n            throw ex;\n        }\n    };\n    // Accessing some objects may throw\n    // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n    try {\n        for (var property in fn) {\n            if (Object.prototype.hasOwnProperty.call(fn, property)) {\n                sentryWrapped[property] = fn[property];\n            }\n        }\n    }\n    catch (_oO) { } // tslint:disable-line:no-empty\n    fn.prototype = fn.prototype || {};\n    sentryWrapped.prototype = fn.prototype;\n    Object.defineProperty(fn, '__sentry_wrapped__', {\n        enumerable: false,\n        value: sentryWrapped,\n    });\n    // Signal that this function has been wrapped/filled already\n    // for both debugging and to prevent it to being wrapped/filled twice\n    Object.defineProperties(sentryWrapped, {\n        __sentry__: {\n            enumerable: false,\n            value: true,\n        },\n        __sentry_original__: {\n            enumerable: false,\n            value: fn,\n        },\n    });\n    // Restore original function name (not all browsers allow that)\n    try {\n        var descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name');\n        if (descriptor.configurable) {\n            Object.defineProperty(sentryWrapped, 'name', {\n                get: function () {\n                    return fn.name;\n                },\n            });\n        }\n    }\n    catch (_oO) {\n        /*no-empty*/\n    }\n    return sentryWrapped;\n}\n//# sourceMappingURL=helpers.js.map","import { fill, getFunctionName, getGlobalObject } from '@sentry/utils';\nimport { wrap } from '../helpers';\n/** Wrap timer functions and event targets to catch errors and provide better meta data */\nvar TryCatch = /** @class */ (function () {\n    function TryCatch() {\n        /** JSDoc */\n        this._ignoreOnError = 0;\n        /**\n         * @inheritDoc\n         */\n        this.name = TryCatch.id;\n    }\n    /** JSDoc */\n    TryCatch.prototype._wrapTimeFunction = function (original) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var originalCallback = args[0];\n            args[0] = wrap(originalCallback, {\n                mechanism: {\n                    data: { function: getFunctionName(original) },\n                    handled: true,\n                    type: 'instrument',\n                },\n            });\n            return original.apply(this, args);\n        };\n    };\n    /** JSDoc */\n    TryCatch.prototype._wrapRAF = function (original) {\n        return function (callback) {\n            return original(wrap(callback, {\n                mechanism: {\n                    data: {\n                        function: 'requestAnimationFrame',\n                        handler: getFunctionName(original),\n                    },\n                    handled: true,\n                    type: 'instrument',\n                },\n            }));\n        };\n    };\n    /** JSDoc */\n    TryCatch.prototype._wrapEventTarget = function (target) {\n        var global = getGlobalObject();\n        var proto = global[target] && global[target].prototype;\n        if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n            return;\n        }\n        fill(proto, 'addEventListener', function (original) {\n            return function (eventName, fn, options) {\n                try {\n                    // tslint:disable-next-line:no-unbound-method strict-type-predicates\n                    if (typeof fn.handleEvent === 'function') {\n                        fn.handleEvent = wrap(fn.handleEvent.bind(fn), {\n                            mechanism: {\n                                data: {\n                                    function: 'handleEvent',\n                                    handler: getFunctionName(fn),\n                                    target: target,\n                                },\n                                handled: true,\n                                type: 'instrument',\n                            },\n                        });\n                    }\n                }\n                catch (err) {\n                    // can sometimes get 'Permission denied to access property \"handle Event'\n                }\n                return original.call(this, eventName, wrap(fn, {\n                    mechanism: {\n                        data: {\n                            function: 'addEventListener',\n                            handler: getFunctionName(fn),\n                            target: target,\n                        },\n                        handled: true,\n                        type: 'instrument',\n                    },\n                }), options);\n            };\n        });\n        fill(proto, 'removeEventListener', function (original) {\n            return function (eventName, fn, options) {\n                var callback = fn;\n                try {\n                    callback = callback && (callback.__sentry_wrapped__ || callback);\n                }\n                catch (e) {\n                    // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n                }\n                return original.call(this, eventName, callback, options);\n            };\n        });\n    };\n    /** JSDoc */\n    TryCatch.prototype._wrapXHR = function (originalSend) {\n        return function () {\n            var _this = this;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var xhr = this; // tslint:disable-line:no-this-assignment\n            var xmlHttpRequestProps = ['onload', 'onerror', 'onprogress'];\n            xmlHttpRequestProps.forEach(function (prop) {\n                if (prop in _this && typeof _this[prop] === 'function') {\n                    fill(_this, prop, function (original) {\n                        return wrap(original, {\n                            mechanism: {\n                                data: {\n                                    function: prop,\n                                    handler: getFunctionName(original),\n                                },\n                                handled: true,\n                                type: 'instrument',\n                            },\n                        });\n                    });\n                }\n            });\n            if ('onreadystatechange' in xhr && typeof xhr.onreadystatechange === 'function') {\n                fill(xhr, 'onreadystatechange', function (original) {\n                    var wrapOptions = {\n                        mechanism: {\n                            data: {\n                                function: 'onreadystatechange',\n                                handler: getFunctionName(original),\n                            },\n                            handled: true,\n                            type: 'instrument',\n                        },\n                    };\n                    // If Instrument integration has been called before TryCatch, get the name of original function\n                    if (original.__sentry_original__) {\n                        wrapOptions.mechanism.data.handler = getFunctionName(original.__sentry_original__);\n                    }\n                    // Otherwise wrap directly\n                    return wrap(original, wrapOptions);\n                });\n            }\n            return originalSend.apply(this, args);\n        };\n    };\n    /**\n     * Wrap timer functions and event targets to catch errors\n     * and provide better metadata.\n     */\n    TryCatch.prototype.setupOnce = function () {\n        this._ignoreOnError = this._ignoreOnError;\n        var global = getGlobalObject();\n        fill(global, 'setTimeout', this._wrapTimeFunction.bind(this));\n        fill(global, 'setInterval', this._wrapTimeFunction.bind(this));\n        fill(global, 'requestAnimationFrame', this._wrapRAF.bind(this));\n        if ('XMLHttpRequest' in global) {\n            fill(XMLHttpRequest.prototype, 'send', this._wrapXHR.bind(this));\n        }\n        [\n            'EventTarget',\n            'Window',\n            'Node',\n            'ApplicationCache',\n            'AudioTrackList',\n            'ChannelMergerNode',\n            'CryptoOperation',\n            'EventSource',\n            'FileReader',\n            'HTMLUnknownElement',\n            'IDBDatabase',\n            'IDBRequest',\n            'IDBTransaction',\n            'KeyOperation',\n            'MediaController',\n            'MessagePort',\n            'ModalWindow',\n            'Notification',\n            'SVGElementInstance',\n            'Screen',\n            'TextTrack',\n            'TextTrackCue',\n            'TextTrackList',\n            'WebSocket',\n            'WebSocketWorker',\n            'Worker',\n            'XMLHttpRequest',\n            'XMLHttpRequestEventTarget',\n            'XMLHttpRequestUpload',\n        ].forEach(this._wrapEventTarget.bind(this));\n    };\n    /**\n     * @inheritDoc\n     */\n    TryCatch.id = 'TryCatch';\n    return TryCatch;\n}());\nexport { TryCatch };\n//# sourceMappingURL=trycatch.js.map","/* tslint:disable:only-arrow-functions no-unsafe-any */\nimport * as tslib_1 from \"tslib\";\nimport { isInstanceOf, isString } from './is';\nimport { logger } from './logger';\nimport { getFunctionName, getGlobalObject } from './misc';\nimport { fill } from './object';\nimport { supportsHistory, supportsNativeFetch } from './supports';\nvar global = getGlobalObject();\n/**\n * Instrument native APIs to call handlers that can be used to create breadcrumbs, APM spans etc.\n *  - Console API\n *  - Fetch API\n *  - XHR API\n *  - History API\n *  - DOM API (click/typing)\n */\nvar handlers = {};\nvar instrumented = {};\n/** Instruments given API */\nfunction instrument(type) {\n    if (instrumented[type]) {\n        return;\n    }\n    instrumented[type] = true;\n    switch (type) {\n        case 'console':\n            instrumentConsole();\n            break;\n        case 'dom':\n            instrumentDOM();\n            break;\n        case 'xhr':\n            instrumentXHR();\n            break;\n        case 'fetch':\n            instrumentFetch();\n            break;\n        case 'history':\n            instrumentHistory();\n            break;\n        default:\n            logger.warn('unknown instrumentation type:', type);\n    }\n}\n/**\n * Add handler that will be called when given type of instrumentation triggers.\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addInstrumentationHandler(handler) {\n    // tslint:disable-next-line:strict-type-predicates\n    if (!handler || typeof handler.type !== 'string' || typeof handler.callback !== 'function') {\n        return;\n    }\n    handlers[handler.type] = handlers[handler.type] || [];\n    handlers[handler.type].push(handler.callback);\n    instrument(handler.type);\n}\n/** JSDoc */\nfunction triggerHandlers(type, data) {\n    var e_1, _a;\n    if (!type || !handlers[type]) {\n        return;\n    }\n    try {\n        for (var _b = tslib_1.__values(handlers[type] || []), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var handler = _c.value;\n            try {\n                handler(data);\n            }\n            catch (e) {\n                logger.error(\"Error while triggering instrumentation handler.\\nType: \" + type + \"\\nName: \" + getFunctionName(handler) + \"\\nError: \" + e);\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n}\n/** JSDoc */\nfunction instrumentConsole() {\n    if (!('console' in global)) {\n        return;\n    }\n    ['debug', 'info', 'warn', 'error', 'log', 'assert'].forEach(function (level) {\n        if (!(level in global.console)) {\n            return;\n        }\n        fill(global.console, level, function (originalConsoleLevel) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                triggerHandlers('console', { args: args, level: level });\n                // this fails for some browsers. :(\n                if (originalConsoleLevel) {\n                    Function.prototype.apply.call(originalConsoleLevel, global.console, args);\n                }\n            };\n        });\n    });\n}\n/** JSDoc */\nfunction instrumentFetch() {\n    if (!supportsNativeFetch()) {\n        return;\n    }\n    fill(global, 'fetch', function (originalFetch) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var commonHandlerData = {\n                args: args,\n                fetchData: {\n                    method: getFetchMethod(args),\n                    url: getFetchUrl(args),\n                },\n                startTimestamp: Date.now(),\n            };\n            triggerHandlers('fetch', tslib_1.__assign({}, commonHandlerData));\n            return originalFetch.apply(global, args).then(function (response) {\n                triggerHandlers('fetch', tslib_1.__assign({}, commonHandlerData, { endTimestamp: Date.now(), response: response }));\n                return response;\n            }, function (error) {\n                triggerHandlers('fetch', tslib_1.__assign({}, commonHandlerData, { endTimestamp: Date.now(), error: error }));\n                throw error;\n            });\n        };\n    });\n}\n/** Extract `method` from fetch call arguments */\nfunction getFetchMethod(fetchArgs) {\n    if (fetchArgs === void 0) { fetchArgs = []; }\n    if ('Request' in global && isInstanceOf(fetchArgs[0], Request) && fetchArgs[0].method) {\n        return String(fetchArgs[0].method).toUpperCase();\n    }\n    if (fetchArgs[1] && fetchArgs[1].method) {\n        return String(fetchArgs[1].method).toUpperCase();\n    }\n    return 'GET';\n}\n/** Extract `url` from fetch call arguments */\nfunction getFetchUrl(fetchArgs) {\n    if (fetchArgs === void 0) { fetchArgs = []; }\n    if (typeof fetchArgs[0] === 'string') {\n        return fetchArgs[0];\n    }\n    if ('Request' in global && isInstanceOf(fetchArgs[0], Request)) {\n        return fetchArgs[0].url;\n    }\n    return String(fetchArgs[0]);\n}\n/** JSDoc */\nfunction instrumentXHR() {\n    if (!('XMLHttpRequest' in global)) {\n        return;\n    }\n    var xhrproto = XMLHttpRequest.prototype;\n    fill(xhrproto, 'open', function (originalOpen) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var url = args[1];\n            this.__sentry_xhr__ = {\n                method: isString(args[0]) ? args[0].toUpperCase() : args[0],\n                url: args[1],\n            };\n            // if Sentry key appears in URL, don't capture it as a request\n            if (isString(url) && this.__sentry_xhr__.method === 'POST' && url.match(/sentry_key/)) {\n                this.__sentry_own_request__ = true;\n            }\n            return originalOpen.apply(this, args);\n        };\n    });\n    fill(xhrproto, 'send', function (originalSend) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var xhr = this; // tslint:disable-line:no-this-assignment\n            var commonHandlerData = {\n                args: args,\n                startTimestamp: Date.now(),\n                xhr: xhr,\n            };\n            triggerHandlers('xhr', tslib_1.__assign({}, commonHandlerData));\n            /**\n             * @hidden\n             */\n            function onreadystatechangeHandler() {\n                if (xhr.readyState === 4) {\n                    try {\n                        // touching statusCode in some platforms throws\n                        // an exception\n                        if (xhr.__sentry_xhr__) {\n                            xhr.__sentry_xhr__.status_code = xhr.status;\n                        }\n                    }\n                    catch (e) {\n                        /* do nothing */\n                    }\n                    triggerHandlers('xhr', tslib_1.__assign({}, commonHandlerData, { endTimestamp: Date.now() }));\n                }\n            }\n            if ('onreadystatechange' in xhr && typeof xhr.onreadystatechange === 'function') {\n                fill(xhr, 'onreadystatechange', function (original) {\n                    return function () {\n                        var readyStateArgs = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            readyStateArgs[_i] = arguments[_i];\n                        }\n                        onreadystatechangeHandler();\n                        return original.apply(xhr, readyStateArgs);\n                    };\n                });\n            }\n            else {\n                // if onreadystatechange wasn't actually set by the page on this xhr, we\n                // are free to set our own and capture the breadcrumb\n                xhr.onreadystatechange = onreadystatechangeHandler;\n            }\n            return originalSend.apply(this, args);\n        };\n    });\n}\nvar lastHref;\n/** JSDoc */\nfunction instrumentHistory() {\n    if (!supportsHistory()) {\n        return;\n    }\n    var oldOnPopState = global.onpopstate;\n    global.onpopstate = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var to = global.location.href;\n        // keep track of the current URL state, as we always receive only the updated state\n        var from = lastHref;\n        lastHref = to;\n        triggerHandlers('history', {\n            from: from,\n            to: to,\n        });\n        if (oldOnPopState) {\n            return oldOnPopState.apply(this, args);\n        }\n    };\n    /** @hidden */\n    function historyReplacementFunction(originalHistoryFunction) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var url = args.length > 2 ? args[2] : undefined;\n            if (url) {\n                // coerce to string (this is what pushState does)\n                var from = lastHref;\n                var to = String(url);\n                // keep track of the current URL state, as we always receive only the updated state\n                lastHref = to;\n                triggerHandlers('history', {\n                    from: from,\n                    to: to,\n                });\n            }\n            return originalHistoryFunction.apply(this, args);\n        };\n    }\n    fill(global.history, 'pushState', historyReplacementFunction);\n    fill(global.history, 'replaceState', historyReplacementFunction);\n}\n/** JSDoc */\nfunction instrumentDOM() {\n    if (!('document' in global)) {\n        return;\n    }\n    // Capture breadcrumbs from any click that is unhandled / bubbled up all the way\n    // to the document. Do this before we instrument addEventListener.\n    global.document.addEventListener('click', domEventHandler('click', triggerHandlers.bind(null, 'dom')), false);\n    global.document.addEventListener('keypress', keypressEventHandler(triggerHandlers.bind(null, 'dom')), false);\n    // After hooking into document bubbled up click and keypresses events, we also hook into user handled click & keypresses.\n    ['EventTarget', 'Node'].forEach(function (target) {\n        var proto = global[target] && global[target].prototype;\n        if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n            return;\n        }\n        fill(proto, 'addEventListener', function (original) {\n            return function (eventName, fn, options) {\n                if (fn && fn.handleEvent) {\n                    if (eventName === 'click') {\n                        fill(fn, 'handleEvent', function (innerOriginal) {\n                            return function (event) {\n                                domEventHandler('click', triggerHandlers.bind(null, 'dom'))(event);\n                                return innerOriginal.call(this, event);\n                            };\n                        });\n                    }\n                    if (eventName === 'keypress') {\n                        fill(fn, 'handleEvent', function (innerOriginal) {\n                            return function (event) {\n                                keypressEventHandler(triggerHandlers.bind(null, 'dom'))(event);\n                                return innerOriginal.call(this, event);\n                            };\n                        });\n                    }\n                }\n                else {\n                    if (eventName === 'click') {\n                        domEventHandler('click', triggerHandlers.bind(null, 'dom'), true)(this);\n                    }\n                    if (eventName === 'keypress') {\n                        keypressEventHandler(triggerHandlers.bind(null, 'dom'))(this);\n                    }\n                }\n                return original.call(this, eventName, fn, options);\n            };\n        });\n        fill(proto, 'removeEventListener', function (original) {\n            return function (eventName, fn, options) {\n                var callback = fn;\n                try {\n                    callback = callback && (callback.__sentry_wrapped__ || callback);\n                }\n                catch (e) {\n                    // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n                }\n                return original.call(this, eventName, callback, options);\n            };\n        });\n    });\n}\nvar debounceDuration = 1000;\nvar debounceTimer = 0;\nvar keypressTimeout;\nvar lastCapturedEvent;\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param name the event name (e.g. \"click\")\n * @param handler function that will be triggered\n * @param debounce decides whether it should wait till another event loop\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nfunction domEventHandler(name, handler, debounce) {\n    if (debounce === void 0) { debounce = false; }\n    return function (event) {\n        // reset keypress timeout; e.g. triggering a 'click' after\n        // a 'keypress' will reset the keypress debounce so that a new\n        // set of keypresses can be recorded\n        keypressTimeout = undefined;\n        // It's possible this handler might trigger multiple times for the same\n        // event (e.g. event propagation through node ancestors). Ignore if we've\n        // already captured the event.\n        if (!event || lastCapturedEvent === event) {\n            return;\n        }\n        lastCapturedEvent = event;\n        if (debounceTimer) {\n            clearTimeout(debounceTimer);\n        }\n        if (debounce) {\n            debounceTimer = setTimeout(function () {\n                handler({ event: event, name: name });\n            });\n        }\n        else {\n            handler({ event: event, name: name });\n        }\n    };\n}\n/**\n * Wraps addEventListener to capture keypress UI events\n * @param handler function that will be triggered\n * @returns wrapped keypress events handler\n * @hidden\n */\nfunction keypressEventHandler(handler) {\n    // TODO: if somehow user switches keypress target before\n    //       debounce timeout is triggered, we will only capture\n    //       a single breadcrumb from the FIRST target (acceptable?)\n    return function (event) {\n        var target;\n        try {\n            target = event.target;\n        }\n        catch (e) {\n            // just accessing event properties can throw an exception in some rare circumstances\n            // see: https://github.com/getsentry/raven-js/issues/838\n            return;\n        }\n        var tagName = target && target.tagName;\n        // only consider keypress events on actual input elements\n        // this will disregard keypresses targeting body (e.g. tabbing\n        // through elements, hotkeys, etc)\n        if (!tagName || (tagName !== 'INPUT' && tagName !== 'TEXTAREA' && !target.isContentEditable)) {\n            return;\n        }\n        // record first keypress in a series, but ignore subsequent\n        // keypresses until debounce clears\n        if (!keypressTimeout) {\n            domEventHandler('input', handler)(event);\n        }\n        clearTimeout(keypressTimeout);\n        keypressTimeout = setTimeout(function () {\n            keypressTimeout = undefined;\n        }, debounceDuration);\n    };\n}\n//# sourceMappingURL=instrument.js.map","import * as tslib_1 from \"tslib\";\nimport { API, getCurrentHub } from '@sentry/core';\nimport { Severity } from '@sentry/types';\nimport { addInstrumentationHandler, getEventDescription, getGlobalObject, htmlTreeAsString, logger, normalize, parseUrl, safeJoin, } from '@sentry/utils';\n/**\n * Default Breadcrumbs instrumentations\n * TODO: Deprecated - with v6, this will be renamed to `Instrument`\n */\nvar Breadcrumbs = /** @class */ (function () {\n    /**\n     * @inheritDoc\n     */\n    function Breadcrumbs(options) {\n        /**\n         * @inheritDoc\n         */\n        this.name = Breadcrumbs.id;\n        this._options = tslib_1.__assign({ console: true, dom: true, fetch: true, history: true, sentry: true, xhr: true }, options);\n    }\n    /**\n     * Creates breadcrumbs from console API calls\n     */\n    Breadcrumbs.prototype._consoleBreadcrumb = function (handlerData) {\n        var breadcrumb = {\n            category: 'console',\n            data: {\n                extra: {\n                    arguments: normalize(handlerData.args, 3),\n                },\n                logger: 'console',\n            },\n            level: Severity.fromString(handlerData.level),\n            message: safeJoin(handlerData.args, ' '),\n        };\n        if (handlerData.level === 'assert') {\n            if (handlerData.args[0] === false) {\n                breadcrumb.message = \"Assertion failed: \" + (safeJoin(handlerData.args.slice(1), ' ') || 'console.assert');\n                breadcrumb.data.extra.arguments = normalize(handlerData.args.slice(1), 3);\n            }\n            else {\n                // Don't capture a breadcrumb for passed assertions\n                return;\n            }\n        }\n        getCurrentHub().addBreadcrumb(breadcrumb, {\n            input: handlerData.args,\n            level: handlerData.level,\n        });\n    };\n    /**\n     * Creates breadcrumbs from DOM API calls\n     */\n    Breadcrumbs.prototype._domBreadcrumb = function (handlerData) {\n        var target;\n        // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n        try {\n            target = handlerData.event.target\n                ? htmlTreeAsString(handlerData.event.target)\n                : htmlTreeAsString(handlerData.event);\n        }\n        catch (e) {\n            target = '<unknown>';\n        }\n        if (target.length === 0) {\n            return;\n        }\n        getCurrentHub().addBreadcrumb({\n            category: \"ui.\" + handlerData.name,\n            message: target,\n        }, {\n            event: event,\n            name: handlerData.name,\n        });\n    };\n    /**\n     * Creates breadcrumbs from XHR API calls\n     */\n    Breadcrumbs.prototype._xhrBreadcrumb = function (handlerData) {\n        if (handlerData.endTimestamp) {\n            // We only capture complete, non-sentry requests\n            if (handlerData.xhr.__sentry_own_request__) {\n                return;\n            }\n            getCurrentHub().addBreadcrumb({\n                category: 'xhr',\n                data: handlerData.xhr.__sentry_xhr__,\n                type: 'http',\n            }, {\n                xhr: handlerData.xhr,\n            });\n            return;\n        }\n        // We only capture issued sentry requests\n        if (handlerData.xhr.__sentry_own_request__) {\n            addSentryBreadcrumb(handlerData.args[0]);\n        }\n    };\n    /**\n     * Creates breadcrumbs from fetch API calls\n     */\n    Breadcrumbs.prototype._fetchBreadcrumb = function (handlerData) {\n        // We only capture complete fetch requests\n        if (!handlerData.endTimestamp) {\n            return;\n        }\n        var client = getCurrentHub().getClient();\n        var dsn = client && client.getDsn();\n        if (dsn) {\n            var filterUrl = new API(dsn).getStoreEndpoint();\n            // if Sentry key appears in URL, don't capture it as a request\n            // but rather as our own 'sentry' type breadcrumb\n            if (filterUrl &&\n                handlerData.fetchData.url.indexOf(filterUrl) !== -1 &&\n                handlerData.fetchData.method === 'POST' &&\n                handlerData.args[1] &&\n                handlerData.args[1].body) {\n                addSentryBreadcrumb(handlerData.args[1].body);\n                return;\n            }\n        }\n        if (handlerData.error) {\n            getCurrentHub().addBreadcrumb({\n                category: 'fetch',\n                data: tslib_1.__assign({}, handlerData.fetchData, { status_code: handlerData.response.status }),\n                level: Severity.Error,\n                type: 'http',\n            }, {\n                data: handlerData.error,\n                input: handlerData.args,\n            });\n        }\n        else {\n            getCurrentHub().addBreadcrumb({\n                category: 'fetch',\n                data: tslib_1.__assign({}, handlerData.fetchData, { status_code: handlerData.response.status }),\n                type: 'http',\n            }, {\n                input: handlerData.args,\n                response: handlerData.response,\n            });\n        }\n    };\n    /**\n     * Creates breadcrumbs from history API calls\n     */\n    Breadcrumbs.prototype._historyBreadcrumb = function (handlerData) {\n        var global = getGlobalObject();\n        var from = handlerData.from;\n        var to = handlerData.to;\n        var parsedLoc = parseUrl(global.location.href);\n        var parsedFrom = parseUrl(from);\n        var parsedTo = parseUrl(to);\n        // Initial pushState doesn't provide `from` information\n        if (!parsedFrom.path) {\n            parsedFrom = parsedLoc;\n        }\n        // Use only the path component of the URL if the URL matches the current\n        // document (almost all the time when using pushState)\n        if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n            // tslint:disable-next-line:no-parameter-reassignment\n            to = parsedTo.relative;\n        }\n        if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n            // tslint:disable-next-line:no-parameter-reassignment\n            from = parsedFrom.relative;\n        }\n        getCurrentHub().addBreadcrumb({\n            category: 'navigation',\n            data: {\n                from: from,\n                to: to,\n            },\n        });\n    };\n    /**\n     * Instrument browser built-ins w/ breadcrumb capturing\n     *  - Console API\n     *  - DOM API (click/typing)\n     *  - XMLHttpRequest API\n     *  - Fetch API\n     *  - History API\n     */\n    Breadcrumbs.prototype.setupOnce = function () {\n        var _this = this;\n        if (this._options.console) {\n            addInstrumentationHandler({\n                callback: function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    _this._consoleBreadcrumb.apply(_this, tslib_1.__spread(args));\n                },\n                type: 'console',\n            });\n        }\n        if (this._options.dom) {\n            addInstrumentationHandler({\n                callback: function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    _this._domBreadcrumb.apply(_this, tslib_1.__spread(args));\n                },\n                type: 'dom',\n            });\n        }\n        if (this._options.xhr) {\n            addInstrumentationHandler({\n                callback: function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    _this._xhrBreadcrumb.apply(_this, tslib_1.__spread(args));\n                },\n                type: 'xhr',\n            });\n        }\n        if (this._options.fetch) {\n            addInstrumentationHandler({\n                callback: function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    _this._fetchBreadcrumb.apply(_this, tslib_1.__spread(args));\n                },\n                type: 'fetch',\n            });\n        }\n        if (this._options.history) {\n            addInstrumentationHandler({\n                callback: function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    _this._historyBreadcrumb.apply(_this, tslib_1.__spread(args));\n                },\n                type: 'history',\n            });\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Breadcrumbs.id = 'Breadcrumbs';\n    return Breadcrumbs;\n}());\nexport { Breadcrumbs };\n/**\n * Create a breadcrumb of `sentry` from the events themselves\n */\nfunction addSentryBreadcrumb(serializedData) {\n    // There's always something that can go wrong with deserialization...\n    try {\n        var event_1 = JSON.parse(serializedData);\n        getCurrentHub().addBreadcrumb({\n            category: 'sentry',\n            event_id: event_1.event_id,\n            level: event_1.level || Severity.fromString('error'),\n            message: getEventDescription(event_1),\n        }, {\n            event: event_1,\n        });\n    }\n    catch (_oO) {\n        logger.error('Error while adding sentry type breadcrumb');\n    }\n}\n//# sourceMappingURL=breadcrumbs.js.map","import * as tslib_1 from \"tslib\";\nimport { getCurrentHub } from '@sentry/core';\nimport { Severity } from '@sentry/types';\nimport { addExceptionMechanism, getGlobalObject, getLocationHref, isErrorEvent, isPrimitive, isString, logger, } from '@sentry/utils';\nimport { eventFromUnknownInput } from '../eventbuilder';\nimport { shouldIgnoreOnError } from '../helpers';\n/** Global handlers */\nvar GlobalHandlers = /** @class */ (function () {\n    /** JSDoc */\n    function GlobalHandlers(options) {\n        /**\n         * @inheritDoc\n         */\n        this.name = GlobalHandlers.id;\n        /** JSDoc */\n        this._global = getGlobalObject();\n        /** JSDoc */\n        this._oldOnErrorHandler = null;\n        /** JSDoc */\n        this._oldOnUnhandledRejectionHandler = null;\n        /** JSDoc */\n        this._onErrorHandlerInstalled = false;\n        /** JSDoc */\n        this._onUnhandledRejectionHandlerInstalled = false;\n        this._options = tslib_1.__assign({ onerror: true, onunhandledrejection: true }, options);\n    }\n    /**\n     * @inheritDoc\n     */\n    GlobalHandlers.prototype.setupOnce = function () {\n        Error.stackTraceLimit = 50;\n        if (this._options.onerror) {\n            logger.log('Global Handler attached: onerror');\n            this._installGlobalOnErrorHandler();\n        }\n        if (this._options.onunhandledrejection) {\n            logger.log('Global Handler attached: onunhandledrejection');\n            this._installGlobalOnUnhandledRejectionHandler();\n        }\n    };\n    /** JSDoc */\n    GlobalHandlers.prototype._installGlobalOnErrorHandler = function () {\n        if (this._onErrorHandlerInstalled) {\n            return;\n        }\n        var self = this; // tslint:disable-line:no-this-assignment\n        this._oldOnErrorHandler = this._global.onerror;\n        this._global.onerror = function (msg, url, line, column, error) {\n            var currentHub = getCurrentHub();\n            var hasIntegration = currentHub.getIntegration(GlobalHandlers);\n            var isFailedOwnDelivery = error && error.__sentry_own_request__ === true;\n            if (!hasIntegration || shouldIgnoreOnError() || isFailedOwnDelivery) {\n                if (self._oldOnErrorHandler) {\n                    return self._oldOnErrorHandler.apply(this, arguments);\n                }\n                return false;\n            }\n            var client = currentHub.getClient();\n            var event = isPrimitive(error)\n                ? self._eventFromIncompleteOnError(msg, url, line, column)\n                : self._enhanceEventWithInitialFrame(eventFromUnknownInput(error, undefined, {\n                    attachStacktrace: client && client.getOptions().attachStacktrace,\n                    rejection: false,\n                }), url, line, column);\n            addExceptionMechanism(event, {\n                handled: false,\n                type: 'onerror',\n            });\n            currentHub.captureEvent(event, {\n                originalException: error,\n            });\n            if (self._oldOnErrorHandler) {\n                return self._oldOnErrorHandler.apply(this, arguments);\n            }\n            return false;\n        };\n        this._onErrorHandlerInstalled = true;\n    };\n    /** JSDoc */\n    GlobalHandlers.prototype._installGlobalOnUnhandledRejectionHandler = function () {\n        if (this._onUnhandledRejectionHandlerInstalled) {\n            return;\n        }\n        var self = this; // tslint:disable-line:no-this-assignment\n        this._oldOnUnhandledRejectionHandler = this._global.onunhandledrejection;\n        this._global.onunhandledrejection = function (e) {\n            var error = e;\n            try {\n                error = e && 'reason' in e ? e.reason : e;\n            }\n            catch (_oO) {\n                // no-empty\n            }\n            var currentHub = getCurrentHub();\n            var hasIntegration = currentHub.getIntegration(GlobalHandlers);\n            var isFailedOwnDelivery = error && error.__sentry_own_request__ === true;\n            if (!hasIntegration || shouldIgnoreOnError() || isFailedOwnDelivery) {\n                if (self._oldOnUnhandledRejectionHandler) {\n                    return self._oldOnUnhandledRejectionHandler.apply(this, arguments);\n                }\n                return true;\n            }\n            var client = currentHub.getClient();\n            var event = isPrimitive(error)\n                ? self._eventFromIncompleteRejection(error)\n                : eventFromUnknownInput(error, undefined, {\n                    attachStacktrace: client && client.getOptions().attachStacktrace,\n                    rejection: true,\n                });\n            event.level = Severity.Error;\n            addExceptionMechanism(event, {\n                handled: false,\n                type: 'onunhandledrejection',\n            });\n            currentHub.captureEvent(event, {\n                originalException: error,\n            });\n            if (self._oldOnUnhandledRejectionHandler) {\n                return self._oldOnUnhandledRejectionHandler.apply(this, arguments);\n            }\n            return true;\n        };\n        this._onUnhandledRejectionHandlerInstalled = true;\n    };\n    /**\n     * This function creates a stack from an old, error-less onerror handler.\n     */\n    GlobalHandlers.prototype._eventFromIncompleteOnError = function (msg, url, line, column) {\n        var ERROR_TYPES_RE = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n        // If 'message' is ErrorEvent, get real message from inside\n        var message = isErrorEvent(msg) ? msg.message : msg;\n        var name;\n        if (isString(message)) {\n            var groups = message.match(ERROR_TYPES_RE);\n            if (groups) {\n                name = groups[1];\n                message = groups[2];\n            }\n        }\n        var event = {\n            exception: {\n                values: [\n                    {\n                        type: name || 'Error',\n                        value: message,\n                    },\n                ],\n            },\n        };\n        return this._enhanceEventWithInitialFrame(event, url, line, column);\n    };\n    /**\n     * This function creates an Event from an TraceKitStackTrace that has part of it missing.\n     */\n    GlobalHandlers.prototype._eventFromIncompleteRejection = function (error) {\n        return {\n            exception: {\n                values: [\n                    {\n                        type: 'UnhandledRejection',\n                        value: \"Non-Error promise rejection captured with value: \" + error,\n                    },\n                ],\n            },\n        };\n    };\n    /** JSDoc */\n    GlobalHandlers.prototype._enhanceEventWithInitialFrame = function (event, url, line, column) {\n        event.exception = event.exception || {};\n        event.exception.values = event.exception.values || [];\n        event.exception.values[0] = event.exception.values[0] || {};\n        event.exception.values[0].stacktrace = event.exception.values[0].stacktrace || {};\n        event.exception.values[0].stacktrace.frames = event.exception.values[0].stacktrace.frames || [];\n        var colno = isNaN(parseInt(column, 10)) ? undefined : column;\n        var lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n        var filename = isString(url) && url.length > 0 ? url : getLocationHref();\n        if (event.exception.values[0].stacktrace.frames.length === 0) {\n            event.exception.values[0].stacktrace.frames.push({\n                colno: colno,\n                filename: filename,\n                function: '?',\n                in_app: true,\n                lineno: lineno,\n            });\n        }\n        return event;\n    };\n    /**\n     * @inheritDoc\n     */\n    GlobalHandlers.id = 'GlobalHandlers';\n    return GlobalHandlers;\n}());\nexport { GlobalHandlers };\n//# sourceMappingURL=globalhandlers.js.map","import * as tslib_1 from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { isInstanceOf } from '@sentry/utils';\nimport { exceptionFromStacktrace } from '../parsers';\nimport { computeStackTrace } from '../tracekit';\nvar DEFAULT_KEY = 'cause';\nvar DEFAULT_LIMIT = 5;\n/** Adds SDK info to an event. */\nvar LinkedErrors = /** @class */ (function () {\n    /**\n     * @inheritDoc\n     */\n    function LinkedErrors(options) {\n        if (options === void 0) { options = {}; }\n        /**\n         * @inheritDoc\n         */\n        this.name = LinkedErrors.id;\n        this._key = options.key || DEFAULT_KEY;\n        this._limit = options.limit || DEFAULT_LIMIT;\n    }\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.prototype.setupOnce = function () {\n        addGlobalEventProcessor(function (event, hint) {\n            var self = getCurrentHub().getIntegration(LinkedErrors);\n            if (self) {\n                return self._handler(event, hint);\n            }\n            return event;\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.prototype._handler = function (event, hint) {\n        if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n            return event;\n        }\n        var linkedErrors = this._walkErrorTree(hint.originalException, this._key);\n        event.exception.values = tslib_1.__spread(linkedErrors, event.exception.values);\n        return event;\n    };\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.prototype._walkErrorTree = function (error, key, stack) {\n        if (stack === void 0) { stack = []; }\n        if (!isInstanceOf(error[key], Error) || stack.length + 1 >= this._limit) {\n            return stack;\n        }\n        var stacktrace = computeStackTrace(error[key]);\n        var exception = exceptionFromStacktrace(stacktrace);\n        return this._walkErrorTree(error[key], key, tslib_1.__spread([exception], stack));\n    };\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.id = 'LinkedErrors';\n    return LinkedErrors;\n}());\nexport { LinkedErrors };\n//# sourceMappingURL=linkederrors.js.map","import * as tslib_1 from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { getGlobalObject } from '@sentry/utils';\nvar global = getGlobalObject();\n/** UserAgent */\nvar UserAgent = /** @class */ (function () {\n    function UserAgent() {\n        /**\n         * @inheritDoc\n         */\n        this.name = UserAgent.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    UserAgent.prototype.setupOnce = function () {\n        addGlobalEventProcessor(function (event) {\n            if (getCurrentHub().getIntegration(UserAgent)) {\n                if (!global.navigator || !global.location) {\n                    return event;\n                }\n                // Request Interface: https://docs.sentry.io/development/sdk-dev/event-payloads/request/\n                var request = event.request || {};\n                request.url = request.url || global.location.href;\n                request.headers = request.headers || {};\n                request.headers['User-Agent'] = global.navigator.userAgent;\n                return tslib_1.__assign({}, event, { request: request });\n            }\n            return event;\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    UserAgent.id = 'UserAgent';\n    return UserAgent;\n}());\nexport { UserAgent };\n//# sourceMappingURL=useragent.js.map","import { getCurrentHub, initAndBind, Integrations as CoreIntegrations } from '@sentry/core';\nimport { getGlobalObject, SyncPromise } from '@sentry/utils';\nimport { BrowserClient } from './client';\nimport { wrap as internalWrap } from './helpers';\nimport { Breadcrumbs, GlobalHandlers, LinkedErrors, TryCatch, UserAgent } from './integrations';\nexport var defaultIntegrations = [\n    new CoreIntegrations.InboundFilters(),\n    new CoreIntegrations.FunctionToString(),\n    new TryCatch(),\n    new Breadcrumbs(),\n    new GlobalHandlers(),\n    new LinkedErrors(),\n    new UserAgent(),\n];\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nexport function init(options) {\n    if (options === void 0) { options = {}; }\n    if (options.defaultIntegrations === undefined) {\n        options.defaultIntegrations = defaultIntegrations;\n    }\n    if (options.release === undefined) {\n        var window_1 = getGlobalObject();\n        // This supports the variable that sentry-webpack-plugin injects\n        if (window_1.SENTRY_RELEASE && window_1.SENTRY_RELEASE.id) {\n            options.release = window_1.SENTRY_RELEASE.id;\n        }\n    }\n    initAndBind(BrowserClient, options);\n}\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\nexport function showReportDialog(options) {\n    if (options === void 0) { options = {}; }\n    if (!options.eventId) {\n        options.eventId = getCurrentHub().lastEventId();\n    }\n    var client = getCurrentHub().getClient();\n    if (client) {\n        client.showReportDialog(options);\n    }\n}\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nexport function lastEventId() {\n    return getCurrentHub().lastEventId();\n}\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function forceLoad() {\n    // Noop\n}\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function onLoad(callback) {\n    callback();\n}\n/**\n * A promise that resolves when all current events have been sent.\n * If you provide a timeout and the queue takes longer to drain the promise returns false.\n *\n * @param timeout Maximum time in ms the client should wait.\n */\nexport function flush(timeout) {\n    var client = getCurrentHub().getClient();\n    if (client) {\n        return client.flush(timeout);\n    }\n    return SyncPromise.reject(false);\n}\n/**\n * A promise that resolves when all current events have been sent.\n * If you provide a timeout and the queue takes longer to drain the promise returns false.\n *\n * @param timeout Maximum time in ms the client should wait.\n */\nexport function close(timeout) {\n    var client = getCurrentHub().getClient();\n    if (client) {\n        return client.close(timeout);\n    }\n    return SyncPromise.reject(false);\n}\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\nexport function wrap(fn) {\n    return internalWrap(fn)(); // tslint:disable-line:no-unsafe-any\n}\n//# sourceMappingURL=sdk.js.map","export default {\n  title: 'Forward School Aptitude Test',\n  description:\n    'Forward School Aptitude Test is designed to measure your abilities to learn and apply the skills necessary to be a successful software engineer.',\n  openGraph: {\n    type: 'website',\n    locale: 'en',\n    url: 'https://aptitude.forwardschool.co/',\n    site_name: 'Forward School Aptitude Test',\n    images: [{ url: 'https://aptitude.forwardschool.co/forward-school-og.png' }]\n  }\n}\n","import { getCurrentHub } from '@sentry/hub';\nimport { logger } from '@sentry/utils';\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instanciate.\n * @param options Options to pass to the client.\n */\nexport function initAndBind(clientClass, options) {\n    if (options.debug === true) {\n        logger.enable();\n    }\n    getCurrentHub().bindClient(new clientClass(options));\n}\n//# sourceMappingURL=sdk.js.map","import React from 'react'\nimport App from 'next/app'\nimport { ThemeProvider, StylesProvider } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { DefaultSeo } from 'next-seo'\nimport { SnackbarProvider } from 'notistack'\nimport * as Sentry from '@sentry/node'\nimport FullStory from 'react-fullstory'\n\nimport theme from '../config/theme'\nimport SEO from '../config/seo'\n\nSentry.init({\n  dsn: process.env.SENTRY_DSN,\n  enabled: process.env.NODE_ENV === 'production'\n})\n\nexport default class FSATApp extends App {\n  componentDidMount() {\n    // Remove the server-side injected CSS.\n    const jssStyles = document.querySelector('#jss-server-side')\n\n    if (jssStyles) {\n      jssStyles.parentElement.removeChild(jssStyles)\n    }\n  }\n\n  render() {\n    const { Component, pageProps } = this.props\n\n    // Workaround for https://github.com/zeit/next.js/issues/8592\n    const { err } = this.props\n    const modifiedPageProps = { ...pageProps, err }\n\n    return (\n      // Make sure MUI styles are loaded first, so that any subsequent overrides using SC styles will be preserved.\n      <StylesProvider injectFirst>\n        <ThemeProvider theme={theme}>\n          <SnackbarProvider maxSnack={3}>\n            {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n            <CssBaseline />\n            {process.browser && (\n              <FullStory\n                org={process.env.FULLSTORY_ORG_ID}\n                debug={process.env.NODE_ENV === 'development'}\n              />\n            )}\n            <DefaultSeo {...SEO} />\n            <Component {...modifiedPageProps} />\n          </SnackbarProvider>\n        </ThemeProvider>\n      </StylesProvider>\n    )\n  }\n}\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import _Object$create from \"../../core-js/object/create\";\nimport setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = _Object$create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}"],"sourceRoot":""}