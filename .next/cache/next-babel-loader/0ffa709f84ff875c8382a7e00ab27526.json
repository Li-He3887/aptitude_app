{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Document, { Head, Main, NextScript } from 'next/document';\nimport { ServerStyleSheets as MUIStyleSheets } from '@material-ui/core/styles';\nimport { ServerStyleSheet as SCStyleSheet } from 'styled-components';\nimport flush from 'styled-jsx/server';\nimport theme from '../config/theme';\nexport default class FSATDocument extends Document {\n  static async getInitialProps(ctx) {\n    // Resolution order\n    //\n    // On the server:\n    // 1. app.getInitialProps\n    // 2. page.getInitialProps\n    // 3. document.getInitialProps\n    // 4. app.render\n    // 5. page.render\n    // 6. document.render\n    //\n    // On the server with error:\n    // 1. document.getInitialProps\n    // 2. app.render\n    // 3. page.render\n    // 4. document.render\n    //\n    // On the client\n    // 1. app.getInitialProps\n    // 2. page.getInitialProps\n    // 3. app.render\n    // 4. page.render\n    // Render app and page and get the context of the page with collected side effects.\n    const muiStyleSheets = new MUIStyleSheets();\n    const scStyleSheet = new SCStyleSheet();\n    const originalRenderPage = ctx.renderPage;\n\n    try {\n      ctx.renderPage = () => originalRenderPage({\n        enhanceApp: App => props => scStyleSheet.collectStyles(muiStyleSheets.collect(__jsx(App, props)))\n      });\n\n      const initialProps = await Document.getInitialProps(ctx);\n      return _objectSpread({}, initialProps, {\n        styles: __jsx(React.Fragment, null, initialProps.styles, muiStyleSheets.getStyleElement(), scStyleSheet.getStyleElement(), flush() || null)\n      });\n    } finally {\n      scStyleSheet.seal();\n    }\n  }\n\n  render() {\n    return __jsx(\"html\", {\n      lang: \"en\"\n    }, __jsx(Head, null, __jsx(\"meta\", {\n      charSet: \"utf-8\"\n    }), __jsx(\"meta\", {\n      name: \"viewport\",\n      content: \"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\"\n    }), __jsx(\"meta\", {\n      name: \"theme-color\",\n      content: theme.palette.primary.main\n    }), __jsx(\"link\", {\n      rel: \"shortcut icon\",\n      type: \"image/x-icon\",\n      href: \"/favicon.ico\"\n    }), __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\n    })), __jsx(\"body\", null, __jsx(Main, null), __jsx(NextScript, null)));\n  }\n\n}","map":{"version":3,"sources":["/home/forwardschool/aptitude-web/src/pages/_document.js"],"names":["React","Document","Head","Main","NextScript","ServerStyleSheets","MUIStyleSheets","ServerStyleSheet","SCStyleSheet","flush","theme","FSATDocument","getInitialProps","ctx","muiStyleSheets","scStyleSheet","originalRenderPage","renderPage","enhanceApp","App","props","collectStyles","collect","initialProps","styles","getStyleElement","seal","render","palette","primary","main"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,UAA/B,QAAiD,eAAjD;AACA,SAASC,iBAAiB,IAAIC,cAA9B,QAAoD,0BAApD;AACA,SAASC,gBAAgB,IAAIC,YAA7B,QAAiD,mBAAjD;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AAEA,OAAOC,KAAP,MAAkB,iBAAlB;AAEA,eAAe,MAAMC,YAAN,SAA2BV,QAA3B,CAAoC;AACjD,eAAaW,eAAb,CAA6BC,GAA7B,EAAkC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,UAAMC,cAAc,GAAG,IAAIR,cAAJ,EAAvB;AACA,UAAMS,YAAY,GAAG,IAAIP,YAAJ,EAArB;AACA,UAAMQ,kBAAkB,GAAGH,GAAG,CAACI,UAA/B;;AAEA,QAAI;AACFJ,MAAAA,GAAG,CAACI,UAAJ,GAAiB,MACfD,kBAAkB,CAAC;AACjBE,QAAAA,UAAU,EAAEC,GAAG,IAAIC,KAAK,IACtBL,YAAY,CAACM,aAAb,CACEP,cAAc,CAACQ,OAAf,CAAuB,MAAC,GAAD,EAASF,KAAT,CAAvB,CADF;AAFe,OAAD,CADpB;;AAQA,YAAMG,YAAY,GAAG,MAAMtB,QAAQ,CAACW,eAAT,CAAyBC,GAAzB,CAA3B;AAEA,+BACKU,YADL;AAEEC,QAAAA,MAAM,EACJ,4BACGD,YAAY,CAACC,MADhB,EAEGV,cAAc,CAACW,eAAf,EAFH,EAGGV,YAAY,CAACU,eAAb,EAHH,EAIGhB,KAAK,MAAM,IAJd;AAHJ;AAWD,KAtBD,SAsBU;AACRM,MAAAA,YAAY,CAACW,IAAb;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAM,MAAA,IAAI,EAAC;AAAX,OACE,MAAC,IAAD,QACE;AAAM,MAAA,OAAO,EAAC;AAAd,MADF,EAEE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,OAAO,EAAC;AAFV,MAFF,EAOE;AAAM,MAAA,IAAI,EAAC,aAAX;AAAyB,MAAA,OAAO,EAAEjB,KAAK,CAACkB,OAAN,CAAcC,OAAd,CAAsBC;AAAxD,MAPF,EAQE;AAAM,MAAA,GAAG,EAAC,eAAV;AAA0B,MAAA,IAAI,EAAC,cAA/B;AAA8C,MAAA,IAAI,EAAC;AAAnD,MARF,EASE;AACE,MAAA,GAAG,EAAC,YADN;AAEE,MAAA,IAAI,EAAC;AAFP,MATF,CADF,EAeE,oBACE,MAAC,IAAD,OADF,EAEE,MAAC,UAAD,OAFF,CAfF,CADF;AAsBD;;AA/EgD","sourcesContent":["import React from 'react'\nimport Document, { Head, Main, NextScript } from 'next/document'\nimport { ServerStyleSheets as MUIStyleSheets } from '@material-ui/core/styles'\nimport { ServerStyleSheet as SCStyleSheet } from 'styled-components'\nimport flush from 'styled-jsx/server'\n\nimport theme from '../config/theme'\n\nexport default class FSATDocument extends Document {\n  static async getInitialProps(ctx) {\n    // Resolution order\n    //\n    // On the server:\n    // 1. app.getInitialProps\n    // 2. page.getInitialProps\n    // 3. document.getInitialProps\n    // 4. app.render\n    // 5. page.render\n    // 6. document.render\n    //\n    // On the server with error:\n    // 1. document.getInitialProps\n    // 2. app.render\n    // 3. page.render\n    // 4. document.render\n    //\n    // On the client\n    // 1. app.getInitialProps\n    // 2. page.getInitialProps\n    // 3. app.render\n    // 4. page.render\n\n    // Render app and page and get the context of the page with collected side effects.\n    const muiStyleSheets = new MUIStyleSheets()\n    const scStyleSheet = new SCStyleSheet()\n    const originalRenderPage = ctx.renderPage\n\n    try {\n      ctx.renderPage = () =>\n        originalRenderPage({\n          enhanceApp: App => props =>\n            scStyleSheet.collectStyles(\n              muiStyleSheets.collect(<App {...props} />)\n            )\n        })\n\n      const initialProps = await Document.getInitialProps(ctx)\n\n      return {\n        ...initialProps,\n        styles: (\n          <>\n            {initialProps.styles}\n            {muiStyleSheets.getStyleElement()}\n            {scStyleSheet.getStyleElement()}\n            {flush() || null}\n          </>\n        )\n      }\n    } finally {\n      scStyleSheet.seal()\n    }\n  }\n\n  render() {\n    return (\n      <html lang='en'>\n        <Head>\n          <meta charSet='utf-8' />\n          <meta\n            name='viewport'\n            content='minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no'\n          />\n          {/* PWA primary color */}\n          <meta name='theme-color' content={theme.palette.primary.main} />\n          <link rel='shortcut icon' type='image/x-icon' href='/favicon.ico' />\n          <link\n            rel='stylesheet'\n            href='https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap'\n          />\n        </Head>\n        <body>\n          <Main />\n          <NextScript />\n        </body>\n      </html>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}