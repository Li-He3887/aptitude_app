{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from 'axios';\n\nconst FSAT_API = (baseURL = process.env.FSAT_API_V1_URL) => {\n  const api = axios.create({\n    baseURL,\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }); // Create test\n\n  const createTest = ({\n    name,\n    email,\n    testCode,\n    organisation,\n    phone = null\n  }) => api.post('/tests', _objectSpread({\n    name,\n    email,\n    testCode,\n    organisation\n  }, phone && {\n    phone\n  })); // Get test\n\n\n  const getTest = ({\n    testId\n  }) => api.get(`/tests/${testId}`); // Start test\n\n\n  const startTest = ({\n    testId\n  }) => api.post(`/tests/${testId}/start`); // Answer question\n\n\n  const answerQuestion = ({\n    testId,\n    questionNumber,\n    answer\n  }) => api.post(`/tests/${testId}/questions/${questionNumber}`, {\n    answer\n  }); // Get test results\n\n\n  const getTestResults = ({\n    testId\n  }) => api.get(`/tests/${testId}/results`);\n\n  return {\n    createTest,\n    getTest,\n    startTest,\n    answerQuestion,\n    getTestResults\n  };\n};\n\nexport default FSAT_API;","map":{"version":3,"sources":["/home/forwardschool/aptitude-web/src/api.js"],"names":["axios","FSAT_API","baseURL","process","env","FSAT_API_V1_URL","api","create","headers","createTest","name","email","testCode","organisation","phone","post","getTest","testId","get","startTest","answerQuestion","questionNumber","answer","getTestResults"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAG,CAACC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,eAAvB,KAA2C;AAC1D,QAAMC,GAAG,GAAGN,KAAK,CAACO,MAAN,CAAa;AACvBL,IAAAA,OADuB;AAEvBM,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAFc,GAAb,CAAZ,CAD0D,CAQ1D;;AACA,QAAMC,UAAU,GAAG,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,QAAf;AAAyBC,IAAAA,YAAzB;AAAuCC,IAAAA,KAAK,GAAG;AAA/C,GAAD,KACjBR,GAAG,CAACS,IAAJ,CAAS,QAAT;AACEL,IAAAA,IADF;AAEEC,IAAAA,KAFF;AAGEC,IAAAA,QAHF;AAIEC,IAAAA;AAJF,KAKMC,KAAK,IAAI;AACXA,IAAAA;AADW,GALf,EADF,CAT0D,CAoB1D;;;AACA,QAAME,OAAO,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAgBX,GAAG,CAACY,GAAJ,CAAS,UAASD,MAAO,EAAzB,CAAhC,CArB0D,CAuB1D;;;AACA,QAAME,SAAS,GAAG,CAAC;AAAEF,IAAAA;AAAF,GAAD,KAAgBX,GAAG,CAACS,IAAJ,CAAU,UAASE,MAAO,QAA1B,CAAlC,CAxB0D,CA0B1D;;;AACA,QAAMG,cAAc,GAAG,CAAC;AAAEH,IAAAA,MAAF;AAAUI,IAAAA,cAAV;AAA0BC,IAAAA;AAA1B,GAAD,KACrBhB,GAAG,CAACS,IAAJ,CAAU,UAASE,MAAO,cAAaI,cAAe,EAAtD,EAAyD;AACvDC,IAAAA;AADuD,GAAzD,CADF,CA3B0D,CAgC1D;;;AACA,QAAMC,cAAc,GAAG,CAAC;AAAEN,IAAAA;AAAF,GAAD,KAAgBX,GAAG,CAACY,GAAJ,CAAS,UAASD,MAAO,UAAzB,CAAvC;;AAEA,SAAO;AACLR,IAAAA,UADK;AAELO,IAAAA,OAFK;AAGLG,IAAAA,SAHK;AAILC,IAAAA,cAJK;AAKLG,IAAAA;AALK,GAAP;AAOD,CA1CD;;AA4CA,eAAetB,QAAf","sourcesContent":["import axios from 'axios'\n\nconst FSAT_API = (baseURL = process.env.FSAT_API_V1_URL) => {\n  const api = axios.create({\n    baseURL,\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  })\n\n  // Create test\n  const createTest = ({ name, email, testCode, organisation, phone = null }) =>\n    api.post('/tests', {\n      name,\n      email,\n      testCode,\n      organisation,\n      ...(phone && {\n        phone\n      })\n    })\n\n  // Get test\n  const getTest = ({ testId }) => api.get(`/tests/${testId}`)\n\n  // Start test\n  const startTest = ({ testId }) => api.post(`/tests/${testId}/start`)\n\n  // Answer question\n  const answerQuestion = ({ testId, questionNumber, answer }) =>\n    api.post(`/tests/${testId}/questions/${questionNumber}`, {\n      answer\n    })\n\n  // Get test results\n  const getTestResults = ({ testId }) => api.get(`/tests/${testId}/results`)\n\n  return {\n    createTest,\n    getTest,\n    startTest,\n    answerQuestion,\n    getTestResults\n  }\n}\n\nexport default FSAT_API\n"]},"metadata":{},"sourceType":"module"}