{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Error from 'next/error';\nimport * as Sentry from '@sentry/node';\n\nvar FSATError = function FSATError(_ref) {\n  var statusCode = _ref.statusCode,\n      hasGetInitialPropsRun = _ref.hasGetInitialPropsRun,\n      err = _ref.err;\n\n  if (!hasGetInitialPropsRun && err) {\n    // getInitialProps is not called in case of\n    // https://github.com/zeit/next.js/issues/8592. As a workaround, we pass\n    // err via _app.js so it can be captured\n    Sentry.captureException(err);\n  }\n\n  return __jsx(Error, {\n    statusCode: statusCode\n  });\n};\n\nFSATError.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref2) {\n    var res, err, asPath, errorInitialProps;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            res = _ref2.res, err = _ref2.err, asPath = _ref2.asPath;\n            _context.next = 3;\n            return Error.getInitialProps({\n              res: res,\n              err: err\n            });\n\n          case 3:\n            errorInitialProps = _context.sent;\n            // Workaround for https://github.com/zeit/next.js/issues/8592, mark when\n            // getInitialProps has run\n            errorInitialProps.hasGetInitialPropsRun = true;\n\n            if (!res) {\n              _context.next = 13;\n              break;\n            }\n\n            if (!(res.statusCode === 404)) {\n              _context.next = 8;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              statusCode: 404\n            });\n\n          case 8:\n            if (!err) {\n              _context.next = 11;\n              break;\n            }\n\n            Sentry.captureException(err);\n            return _context.abrupt(\"return\", errorInitialProps);\n\n          case 11:\n            _context.next = 16;\n            break;\n\n          case 13:\n            if (!err) {\n              _context.next = 16;\n              break;\n            }\n\n            Sentry.captureException(err);\n            return _context.abrupt(\"return\", errorInitialProps);\n\n          case 16:\n            // If this point is reached, getInitialProps was called without any\n            // information about what the error might be. This is unexpected and may\n            // indicate a bug introduced in Next.js, so record it in Sentry\n            Sentry.captureException(new Error(\"_error.js getInitialProps missing data at path: \".concat(asPath)));\n            return _context.abrupt(\"return\", errorInitialProps);\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default FSATError;","map":{"version":3,"sources":["/home/forwardschool/aptitude-web/src/pages/_error.js"],"names":["React","Error","Sentry","FSATError","statusCode","hasGetInitialPropsRun","err","captureException","getInitialProps","res","asPath","errorInitialProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAO,KAAKC,MAAZ,MAAwB,cAAxB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAgD;AAAA,MAA7CC,UAA6C,QAA7CA,UAA6C;AAAA,MAAjCC,qBAAiC,QAAjCA,qBAAiC;AAAA,MAAVC,GAAU,QAAVA,GAAU;;AAChE,MAAI,CAACD,qBAAD,IAA0BC,GAA9B,EAAmC;AACjC;AACA;AACA;AACAJ,IAAAA,MAAM,CAACK,gBAAP,CAAwBD,GAAxB;AACD;;AAED,SAAO,MAAC,KAAD;AAAO,IAAA,UAAU,EAAEF;AAAnB,IAAP;AACD,CATD;;AAWAD,SAAS,CAACK,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,GAAT,SAASA,GAAT,EAAcH,GAAd,SAAcA,GAAd,EAAmBI,MAAnB,SAAmBA,MAAnB;AAAA;AAAA,mBACMT,KAAK,CAACO,eAAN,CAAsB;AAAEC,cAAAA,GAAG,EAAHA,GAAF;AAAOH,cAAAA,GAAG,EAAHA;AAAP,aAAtB,CADN;;AAAA;AACpBK,YAAAA,iBADoB;AAG1B;AACA;AACAA,YAAAA,iBAAiB,CAACN,qBAAlB,GAA0C,IAA1C;;AAL0B,iBAOtBI,GAPsB;AAAA;AAAA;AAAA;;AAAA,kBAapBA,GAAG,CAACL,UAAJ,KAAmB,GAbC;AAAA;AAAA;AAAA;;AAAA,6CAef;AAAEA,cAAAA,UAAU,EAAE;AAAd,aAfe;;AAAA;AAAA,iBAkBpBE,GAlBoB;AAAA;AAAA;AAAA;;AAmBtBJ,YAAAA,MAAM,CAACK,gBAAP,CAAwBD,GAAxB;AAnBsB,6CAqBfK,iBArBe;;AAAA;AAAA;AAAA;;AAAA;AAAA,iBAiCpBL,GAjCoB;AAAA;AAAA;AAAA;;AAkCtBJ,YAAAA,MAAM,CAACK,gBAAP,CAAwBD,GAAxB;AAlCsB,6CAoCfK,iBApCe;;AAAA;AAwC1B;AACA;AACA;AACAT,YAAAA,MAAM,CAACK,gBAAP,CACE,IAAIN,KAAJ,2DAA6DS,MAA7D,EADF;AA3C0B,6CA+CnBC,iBA/CmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAAA;AAAA;AAAA;AAAA;;AAwDA,eAAeR,SAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport Error from 'next/error'\nimport * as Sentry from '@sentry/node'\n\nconst FSATError = ({ statusCode, hasGetInitialPropsRun, err }) => {\n  if (!hasGetInitialPropsRun && err) {\n    // getInitialProps is not called in case of\n    // https://github.com/zeit/next.js/issues/8592. As a workaround, we pass\n    // err via _app.js so it can be captured\n    Sentry.captureException(err)\n  }\n\n  return <Error statusCode={statusCode} />\n}\n\nFSATError.getInitialProps = async ({ res, err, asPath }) => {\n  const errorInitialProps = await Error.getInitialProps({ res, err })\n\n  // Workaround for https://github.com/zeit/next.js/issues/8592, mark when\n  // getInitialProps has run\n  errorInitialProps.hasGetInitialPropsRun = true\n\n  if (res) {\n    // Running on the server, the response object is available.\n    //\n    // Next.js will pass an err on the server if a page's `getInitialProps`\n    // threw or returned a Promise that rejected\n\n    if (res.statusCode === 404) {\n      // Opinionated: do not record an exception in Sentry for 404\n      return { statusCode: 404 }\n    }\n\n    if (err) {\n      Sentry.captureException(err)\n\n      return errorInitialProps\n    }\n  } else {\n    // Running on the client (browser).\n    //\n    // Next.js will provide an err if:\n    //\n    //  - a page's `getInitialProps` threw or returned a Promise that rejected\n    //  - an exception was thrown somewhere in the React lifecycle (render,\n    //    componentDidMount, etc) that was caught by Next.js's React Error\n    //    Boundary. Read more about what types of exceptions are caught by Error\n    //    Boundaries: https://reactjs.org/docs/error-boundaries.html\n    if (err) {\n      Sentry.captureException(err)\n\n      return errorInitialProps\n    }\n  }\n\n  // If this point is reached, getInitialProps was called without any\n  // information about what the error might be. This is unexpected and may\n  // indicate a bug introduced in Next.js, so record it in Sentry\n  Sentry.captureException(\n    new Error(`_error.js getInitialProps missing data at path: ${asPath}`)\n  )\n\n  return errorInitialProps\n}\n\nFSATError.propTypes = {\n  statusCode: PropTypes.number,\n  hasGetInitialPropsRun: PropTypes.bool,\n  err: PropTypes.object\n}\n\nexport default FSATError\n"]},"metadata":{},"sourceType":"module"}