{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from 'axios';\n\nvar FSAT_API = function FSAT_API() {\n  var baseURL = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : process.env.FSAT_API_V1_URL;\n  var api = axios.create({\n    baseURL: baseURL,\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }); // Create test\n\n  var createTest = function createTest(_ref) {\n    var name = _ref.name,\n        email = _ref.email,\n        testCode = _ref.testCode,\n        organisation = _ref.organisation,\n        _ref$phone = _ref.phone,\n        phone = _ref$phone === void 0 ? null : _ref$phone;\n    return api.post('/tests', _objectSpread({\n      name: name,\n      email: email,\n      testCode: testCode,\n      organisation: organisation\n    }, phone && {\n      phone: phone\n    }));\n  }; // Get test\n\n\n  var getTest = function getTest(_ref2) {\n    var testId = _ref2.testId;\n    return api.get(\"/tests/\".concat(testId));\n  }; // Start test\n\n\n  var startTest = function startTest(_ref3) {\n    var testId = _ref3.testId;\n    return api.post(\"/tests/\".concat(testId, \"/start\"));\n  }; // Answer question\n\n\n  var answerQuestion = function answerQuestion(_ref4) {\n    var testId = _ref4.testId,\n        questionNumber = _ref4.questionNumber,\n        answer = _ref4.answer;\n    return api.post(\"/tests/\".concat(testId, \"/questions/\").concat(questionNumber), {\n      answer: answer\n    });\n  }; // Get test results\n\n\n  var getTestResults = function getTestResults(_ref5) {\n    var testId = _ref5.testId;\n    return api.get(\"/tests/\".concat(testId, \"/results\"));\n  };\n\n  return {\n    createTest: createTest,\n    getTest: getTest,\n    startTest: startTest,\n    answerQuestion: answerQuestion,\n    getTestResults: getTestResults\n  };\n};\n\nexport default FSAT_API;","map":{"version":3,"sources":["/home/forwardschool/aptitude-web/src/api.js"],"names":["axios","FSAT_API","baseURL","process","env","FSAT_API_V1_URL","api","create","headers","createTest","name","email","testCode","organisation","phone","post","getTest","testId","get","startTest","answerQuestion","questionNumber","answer","getTestResults"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAA2C;AAAA,MAA1CC,OAA0C,uEAAhCC,OAAO,CAACC,GAAR,CAAYC,eAAoB;AAC1D,MAAMC,GAAG,GAAGN,KAAK,CAACO,MAAN,CAAa;AACvBL,IAAAA,OAAO,EAAPA,OADuB;AAEvBM,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAFc,GAAb,CAAZ,CAD0D,CAQ1D;;AACA,MAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,QAAGC,IAAH,QAAGA,IAAH;AAAA,QAASC,KAAT,QAASA,KAAT;AAAA,QAAgBC,QAAhB,QAAgBA,QAAhB;AAAA,QAA0BC,YAA1B,QAA0BA,YAA1B;AAAA,0BAAwCC,KAAxC;AAAA,QAAwCA,KAAxC,2BAAgD,IAAhD;AAAA,WACjBR,GAAG,CAACS,IAAJ,CAAS,QAAT;AACEL,MAAAA,IAAI,EAAJA,IADF;AAEEC,MAAAA,KAAK,EAALA,KAFF;AAGEC,MAAAA,QAAQ,EAARA,QAHF;AAIEC,MAAAA,YAAY,EAAZA;AAJF,OAKMC,KAAK,IAAI;AACXA,MAAAA,KAAK,EAALA;AADW,KALf,EADiB;AAAA,GAAnB,CAT0D,CAoB1D;;;AACA,MAAME,OAAO,GAAG,SAAVA,OAAU;AAAA,QAAGC,MAAH,SAAGA,MAAH;AAAA,WAAgBX,GAAG,CAACY,GAAJ,kBAAkBD,MAAlB,EAAhB;AAAA,GAAhB,CArB0D,CAuB1D;;;AACA,MAAME,SAAS,GAAG,SAAZA,SAAY;AAAA,QAAGF,MAAH,SAAGA,MAAH;AAAA,WAAgBX,GAAG,CAACS,IAAJ,kBAAmBE,MAAnB,YAAhB;AAAA,GAAlB,CAxB0D,CA0B1D;;;AACA,MAAMG,cAAc,GAAG,SAAjBA,cAAiB;AAAA,QAAGH,MAAH,SAAGA,MAAH;AAAA,QAAWI,cAAX,SAAWA,cAAX;AAAA,QAA2BC,MAA3B,SAA2BA,MAA3B;AAAA,WACrBhB,GAAG,CAACS,IAAJ,kBAAmBE,MAAnB,wBAAuCI,cAAvC,GAAyD;AACvDC,MAAAA,MAAM,EAANA;AADuD,KAAzD,CADqB;AAAA,GAAvB,CA3B0D,CAgC1D;;;AACA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,QAAGN,MAAH,SAAGA,MAAH;AAAA,WAAgBX,GAAG,CAACY,GAAJ,kBAAkBD,MAAlB,cAAhB;AAAA,GAAvB;;AAEA,SAAO;AACLR,IAAAA,UAAU,EAAVA,UADK;AAELO,IAAAA,OAAO,EAAPA,OAFK;AAGLG,IAAAA,SAAS,EAATA,SAHK;AAILC,IAAAA,cAAc,EAAdA,cAJK;AAKLG,IAAAA,cAAc,EAAdA;AALK,GAAP;AAOD,CA1CD;;AA4CA,eAAetB,QAAf","sourcesContent":["import axios from 'axios'\n\nconst FSAT_API = (baseURL = process.env.FSAT_API_V1_URL) => {\n  const api = axios.create({\n    baseURL,\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  })\n\n  // Create test\n  const createTest = ({ name, email, testCode, organisation, phone = null }) =>\n    api.post('/tests', {\n      name,\n      email,\n      testCode,\n      organisation,\n      ...(phone && {\n        phone\n      })\n    })\n\n  // Get test\n  const getTest = ({ testId }) => api.get(`/tests/${testId}`)\n\n  // Start test\n  const startTest = ({ testId }) => api.post(`/tests/${testId}/start`)\n\n  // Answer question\n  const answerQuestion = ({ testId, questionNumber, answer }) =>\n    api.post(`/tests/${testId}/questions/${questionNumber}`, {\n      answer\n    })\n\n  // Get test results\n  const getTestResults = ({ testId }) => api.get(`/tests/${testId}/results`)\n\n  return {\n    createTest,\n    getTest,\n    startTest,\n    answerQuestion,\n    getTestResults\n  }\n}\n\nexport default FSAT_API\n"]},"metadata":{},"sourceType":"module"}