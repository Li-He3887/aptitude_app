{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { Typography, Container, Grid, Box, TextField, Button, CircularProgress, MenuItem } from '@material-ui/core';\nimport validator from 'validator';\nimport isEmpty from 'lodash/isEmpty';\nimport PhoneNumber from 'awesome-phonenumber';\nimport Router from 'next/router';\nimport { useSnackbar } from 'notistack';\nimport * as Sentry from '@sentry/browser';\nimport theme from '../config/theme';\nimport { getErrorMessage } from '../utils/error';\nimport ResponsiveImage from '../components/ResponsiveImage';\nimport FSAT_API from '../api';\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background: ${props => props.dark ? theme.palette.primary.main : theme.palette.common.white};\n  }\n`;\nconst FormSubmitButton = styled(Button)({\n  marginTop: '1rem'\n});\nconst Heading = styled(Typography)({\n  fontWeight: 'bold',\n  color: `${theme.palette.primary.main}`\n});\n\nconst Index = () => {\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const {\n    0: formState,\n    1: setFormState\n  } = useState({\n    isValid: false,\n    isSubmitting: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n  useEffect(() => {\n    const errors = {};\n    const {\n      name,\n      email,\n      phone,\n      organisation,\n      testCode\n    } = formState.values;\n    const query = new URLSearchParams(window.location.search);\n    const org = query.get('org') || '';\n\n    if (org.toLowerCase() === 'experior') {\n      formState.values.organisation = 'experior';\n    } else if (org.toLowerCase() === 'dhibizap') {\n      formState.values.organisation = 'dhibizap';\n    } else if (org.toLowerCase() === 'dell') {\n      formState.values.organisation = 'dell';\n    } else {\n      formState.values.organisation = 'forward';\n    }\n\n    if (!name) {\n      errors.name = 'Name is required.';\n    }\n\n    if (!email) {\n      errors.email = 'Email is required.';\n    } else if (!validator.isEmail(email)) {\n      errors.email = 'Email is invalid.';\n    }\n\n    if (!organisation) {\n      errors.organisation = 'Organisation is required.';\n    }\n\n    if (!testCode) {\n      errors.testCode = 'Test code is required.';\n    }\n\n    if (phone) {\n      const parsedPhone = new PhoneNumber(phone.startsWith('+') ? phone : `+${phone}`);\n\n      if (!parsedPhone.isValid()) {\n        errors.phone = 'Phone number is invalid. Make sure to use international phone number format.';\n      }\n    }\n\n    setFormState(formState => _objectSpread({}, formState, {\n      isValid: isEmpty(errors),\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleInputChange = event => {\n    event.persist();\n    setFormState(formState => _objectSpread({}, formState, {\n      values: _objectSpread({}, formState.values, {\n        [event.target.name]: event.target.type === 'checkbox' ? event.target.checked : event.target.value\n      }),\n      touched: _objectSpread({}, formState.touched, {\n        [event.target.name]: true\n      })\n    }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const fsatApi = FSAT_API();\n    const {\n      name,\n      email,\n      phone,\n      organisation,\n      testCode\n    } = formState.values;\n    setFormState(formState => _objectSpread({}, formState, {\n      isSubmitting: true\n    }));\n    fsatApi.createTest(_objectSpread({\n      name,\n      email,\n      organisation,\n      testCode\n    }, phone && {\n      phone: `+${phone}`\n    })).then(response => {\n      if (response.data.ended) {\n        Router.push(`/tests/${response.data.id}/report`);\n      } else {\n        Router.push(`/tests/${response.data.id}`);\n      }\n\n      return null;\n    }).catch(error => {\n      Sentry.captureException(error);\n      const errorMessage = getErrorMessage(error);\n      enqueueSnackbar(errorMessage.message, {\n        variant: errorMessage.type,\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'left'\n        }\n      });\n      setFormState(formState => _objectSpread({}, formState, {\n        isSubmitting: false\n      }));\n    });\n  };\n\n  const hasError = field => !!(formState.touched[field] && formState.errors[field]);\n\n  return __jsx(React.Fragment, null, __jsx(GlobalStyle, null), __jsx(Container, null, __jsx(Grid, {\n    container: true,\n    spacing: 3\n  }, __jsx(Grid, {\n    item: true,\n    container: true,\n    xs: 12\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    sm: 2\n  }, __jsx(Box, {\n    my: \"2rem\"\n  }, __jsx(ResponsiveImage, {\n    width: \"130px\",\n    alt: \"Forward School\",\n    src: require('../../public/forward-school-logo-blue.png')\n  })))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 7\n  }, __jsx(Heading, {\n    variant: \"h2\",\n    component: \"h1\",\n    gutterBottom: true\n  }, \"Forward School Aptitude Test\"), __jsx(Typography, {\n    style: {\n      marginBottom: '20px'\n    }\n  }, \"This aptitude test is designed to assess your aptitude for computer programming. It involves four key skill areas:\"), __jsx(Typography, {\n    gutterBottom: true\n  }, __jsx(\"b\", null, \"Logical thinking and problem solving\"), __jsx(\"br\", null), \"Numerical problem solving is analogous to the troubleshooting required in programming.\"), __jsx(Typography, {\n    gutterBottom: true\n  }, __jsx(\"b\", null, \"Pattern and syntax recognition\"), __jsx(\"br\", null), \"Involve recognising similarities and differences in strings of characters and numbers, understanding graphical representations of procedures and symbols, finding which element does not match the corresponding elements and information checking and attention to detail.\"), __jsx(Typography, {\n    gutterBottom: true\n  }, __jsx(\"b\", null, \"Ability to follow complex procedures\"), __jsx(\"br\", null), \"Involves following coded instructions and rules, sequencing events into a logical order, sorting and manipulating lists of items according to specific instructions, deciding how one set of instructions affects another and interpreting flow diagrams.\"), __jsx(Typography, {\n    gutterBottom: true\n  }, __jsx(\"b\", null, \"Being resourceful\"), __jsx(\"br\", null), \"Able to use and leverage any tools or medium at your disposal to solve problems.\")), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 5\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(TextField, {\n    fullWidth: true,\n    required: true,\n    label: \"Name\",\n    name: \"name\",\n    placeholder: \"Your Full Name\",\n    error: hasError('name'),\n    helperText: hasError('name') ? formState.errors.name : null,\n    value: formState.values.name || '',\n    onChange: handleInputChange,\n    type: \"text\",\n    variant: \"outlined\",\n    margin: \"normal\",\n    InputLabelProps: {\n      shrink: true\n    }\n  }), __jsx(TextField, {\n    fullWidth: true,\n    required: true,\n    label: \"Email\",\n    name: \"email\",\n    placeholder: \"your@email.com\",\n    error: hasError('email'),\n    helperText: hasError('email') ? formState.errors.email : null,\n    value: formState.values.email || '',\n    onChange: handleInputChange,\n    type: \"email\",\n    variant: \"outlined\",\n    margin: \"normal\",\n    InputLabelProps: {\n      shrink: true\n    }\n  }), __jsx(TextField, {\n    fullWidth: true,\n    label: \"Phone Number\",\n    name: \"phone\",\n    placeholder: \"60164848888\",\n    error: hasError('phone'),\n    helperText: hasError('phone') ? formState.errors.phone : 'International phone number format with country code.',\n    value: formState.values.phone || '',\n    onChange: handleInputChange,\n    type: \"tel\",\n    variant: \"outlined\",\n    margin: \"normal\",\n    InputLabelProps: {\n      shrink: true\n    }\n  }), __jsx(TextField, {\n    fullWidth: true,\n    required: true,\n    label: \"Organisation\",\n    name: \"organisation\",\n    onChange: handleInputChange,\n    value: formState.values.organisation || 'forward',\n    error: hasError('organisation'),\n    variant: \"outlined\",\n    margin: \"normal\",\n    InputLabelProps: {\n      shrink: true\n    },\n    select: true\n  }, formState.values.organisation === 'forward' && __jsx(MenuItem, {\n    value: \"forward\"\n  }, \"Forward School\"), formState.values.organisation === 'experior' && __jsx(MenuItem, {\n    value: \"experior\"\n  }, \"Experior\"), formState.values.organisation === 'dhibizap' && __jsx(MenuItem, {\n    value: \"dhibizap\"\n  }, \"DHI BizAP\"), formState.values.organisation === 'dell' && __jsx(MenuItem, {\n    value: \"dell\"\n  }, \"Dell\")), __jsx(TextField, {\n    fullWidth: true,\n    required: true,\n    label: \"Test Code\",\n    name: \"testCode\",\n    placeholder: \"Test Code\",\n    error: hasError('testCode'),\n    helperText: hasError('testCode') ? formState.errors.testCode : null,\n    value: formState.values.testCode || '',\n    onChange: handleInputChange,\n    type: \"text\",\n    variant: \"outlined\",\n    margin: \"normal\",\n    InputLabelProps: {\n      shrink: true\n    }\n  }), __jsx(FormSubmitButton, {\n    fullWidth: true,\n    color: \"primary\",\n    size: \"large\",\n    variant: \"contained\",\n    margin: \"normal\",\n    type: \"submit\",\n    disabled: !formState.isValid || formState.isSubmitting,\n    endIcon: formState.isSubmitting ? __jsx(CircularProgress, {\n      color: \"inherit\",\n      size: 20\n    }) : null\n  }, \"Start Test\"))))));\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/forwardschool/aptitude-web/src/pages/index.js"],"names":["React","useState","useEffect","styled","createGlobalStyle","Typography","Container","Grid","Box","TextField","Button","CircularProgress","MenuItem","validator","isEmpty","PhoneNumber","Router","useSnackbar","Sentry","theme","getErrorMessage","ResponsiveImage","FSAT_API","GlobalStyle","props","dark","palette","primary","main","common","white","FormSubmitButton","marginTop","Heading","fontWeight","color","Index","enqueueSnackbar","formState","setFormState","isValid","isSubmitting","values","touched","errors","name","email","phone","organisation","testCode","query","URLSearchParams","window","location","search","org","get","toLowerCase","isEmail","parsedPhone","startsWith","handleInputChange","event","persist","target","type","checked","value","handleSubmit","preventDefault","fsatApi","createTest","then","response","data","ended","push","id","catch","error","captureException","errorMessage","message","variant","anchorOrigin","vertical","horizontal","hasError","field","require","marginBottom","shrink"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styled, { createGlobalStyle } from 'styled-components'\nimport {\n  Typography,\n  Container,\n  Grid,\n  Box,\n  TextField,\n  Button,\n  CircularProgress,\n  MenuItem\n} from '@material-ui/core'\nimport validator from 'validator'\nimport isEmpty from 'lodash/isEmpty'\nimport PhoneNumber from 'awesome-phonenumber'\nimport Router from 'next/router'\nimport { useSnackbar } from 'notistack'\nimport * as Sentry from '@sentry/browser'\n\nimport theme from '../config/theme'\nimport { getErrorMessage } from '../utils/error'\nimport ResponsiveImage from '../components/ResponsiveImage'\nimport FSAT_API from '../api'\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background: ${props =>\n      props.dark ? theme.palette.primary.main : theme.palette.common.white};\n  }\n`\n\nconst FormSubmitButton = styled(Button)({\n  marginTop: '1rem'\n})\n\nconst Heading = styled(Typography)({\n  fontWeight: 'bold',\n  color: `${theme.palette.primary.main}`\n})\n\nconst Index = () => {\n  const { enqueueSnackbar } = useSnackbar()\n  const [formState, setFormState] = useState({\n    isValid: false,\n    isSubmitting: false,\n    values: {},\n    touched: {},\n    errors: {}\n  })\n\n  useEffect(() => {\n    const errors = {}\n    const { name, email, phone, organisation, testCode } = formState.values\n\n    const query = new URLSearchParams(window.location.search)\n    const org = query.get('org') || ''\n    if (org.toLowerCase() === 'experior') {\n      formState.values.organisation = 'experior'\n    } else if (org.toLowerCase() === 'dhibizap') {\n      formState.values.organisation = 'dhibizap'\n    } else if (org.toLowerCase() === 'dell') {\n      formState.values.organisation = 'dell'\n    } else {\n      formState.values.organisation = 'forward'\n    }\n\n    if (!name) {\n      errors.name = 'Name is required.'\n    }\n\n    if (!email) {\n      errors.email = 'Email is required.'\n    } else if (!validator.isEmail(email)) {\n      errors.email = 'Email is invalid.'\n    }\n\n    if (!organisation) {\n      errors.organisation = 'Organisation is required.'\n    }\n\n    if (!testCode) {\n      errors.testCode = 'Test code is required.'\n    }\n\n    if (phone) {\n      const parsedPhone = new PhoneNumber(\n        phone.startsWith('+') ? phone : `+${phone}`\n      )\n\n      if (!parsedPhone.isValid()) {\n        errors.phone =\n          'Phone number is invalid. Make sure to use international phone number format.'\n      }\n    }\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: isEmpty(errors),\n      errors: errors || {}\n    }))\n  }, [formState.values])\n\n  const handleInputChange = event => {\n    event.persist()\n\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n          event.target.type === 'checkbox'\n            ? event.target.checked\n            : event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    }))\n  }\n\n  const handleSubmit = async event => {\n    event.preventDefault()\n    const fsatApi = FSAT_API()\n    const { name, email, phone, organisation, testCode } = formState.values\n\n    setFormState(formState => ({\n      ...formState,\n      isSubmitting: true\n    }))\n\n    fsatApi\n      .createTest({\n        name,\n        email,\n        organisation,\n        testCode,\n        ...(phone && {\n          phone: `+${phone}`\n        })\n      })\n      .then(response => {\n        if (response.data.ended) {\n          Router.push(`/tests/${response.data.id}/report`)\n        } else {\n          Router.push(`/tests/${response.data.id}`)\n        }\n\n        return null\n      })\n      .catch(error => {\n        Sentry.captureException(error)\n\n        const errorMessage = getErrorMessage(error)\n\n        enqueueSnackbar(errorMessage.message, {\n          variant: errorMessage.type,\n          anchorOrigin: {\n            vertical: 'bottom',\n            horizontal: 'left'\n          }\n        })\n\n        setFormState(formState => ({\n          ...formState,\n          isSubmitting: false\n        }))\n      })\n  }\n\n  const hasError = field =>\n    !!(formState.touched[field] && formState.errors[field])\n\n  return (\n    <>\n      <GlobalStyle />\n      <Container>\n        <Grid container spacing={3}>\n          <Grid item container xs={12}>\n            <Grid item xs={6} sm={2}>\n              <Box my='2rem'>\n                <ResponsiveImage\n                  width='130px'\n                  alt='Forward School'\n                  src={require('../../public/forward-school-logo-blue.png')}\n                />\n              </Box>\n            </Grid>\n          </Grid>\n          <Grid item xs={12} sm={7}>\n            <Heading variant='h2' component='h1' gutterBottom>\n              Forward School Aptitude Test\n            </Heading>\n            <Typography style={{ marginBottom: '20px' }}>\n              This aptitude test is designed to assess your aptitude for\n              computer programming. It involves four key skill areas:\n            </Typography>\n            <Typography gutterBottom>\n              <b>Logical thinking and problem solving</b>\n              <br />\n              Numerical problem solving is analogous to the troubleshooting\n              required in programming.\n            </Typography>\n            <Typography gutterBottom>\n              <b>Pattern and syntax recognition</b>\n              <br />\n              Involve recognising similarities and differences in strings of\n              characters and numbers, understanding graphical representations of\n              procedures and symbols, finding which element does not match the\n              corresponding elements and information checking and attention to\n              detail.\n            </Typography>\n            <Typography gutterBottom>\n              <b>Ability to follow complex procedures</b>\n              <br />\n              Involves following coded instructions and rules, sequencing events\n              into a logical order, sorting and manipulating lists of items\n              according to specific instructions, deciding how one set of\n              instructions affects another and interpreting flow diagrams.\n            </Typography>\n            <Typography gutterBottom>\n              <b>Being resourceful</b>\n              <br />\n              Able to use and leverage any tools or medium at your disposal to\n              solve problems.\n            </Typography>\n          </Grid>\n          <Grid item xs={12} sm={5}>\n            <form onSubmit={handleSubmit}>\n              <TextField\n                fullWidth\n                required\n                label='Name'\n                name='name'\n                placeholder='Your Full Name'\n                error={hasError('name')}\n                helperText={hasError('name') ? formState.errors.name : null}\n                value={formState.values.name || ''}\n                onChange={handleInputChange}\n                type='text'\n                variant='outlined'\n                margin='normal'\n                InputLabelProps={{\n                  shrink: true\n                }}\n              />\n              <TextField\n                fullWidth\n                required\n                label='Email'\n                name='email'\n                placeholder='your@email.com'\n                error={hasError('email')}\n                helperText={hasError('email') ? formState.errors.email : null}\n                value={formState.values.email || ''}\n                onChange={handleInputChange}\n                type='email'\n                variant='outlined'\n                margin='normal'\n                InputLabelProps={{\n                  shrink: true\n                }}\n              />\n              <TextField\n                fullWidth\n                label='Phone Number'\n                name='phone'\n                placeholder='60164848888'\n                error={hasError('phone')}\n                helperText={\n                  hasError('phone')\n                    ? formState.errors.phone\n                    : 'International phone number format with country code.'\n                }\n                value={formState.values.phone || ''}\n                onChange={handleInputChange}\n                type='tel'\n                variant='outlined'\n                margin='normal'\n                InputLabelProps={{\n                  shrink: true\n                }}\n              />\n              <TextField\n                fullWidth\n                required\n                label='Organisation'\n                name='organisation'\n                onChange={handleInputChange}\n                value={formState.values.organisation || 'forward'}\n                error={hasError('organisation')}\n                variant='outlined'\n                margin='normal'\n                InputLabelProps={{\n                  shrink: true\n                }}\n                select\n              >\n                {formState.values.organisation === 'forward' && (\n                  <MenuItem value='forward'>Forward School</MenuItem>\n                )}\n                {formState.values.organisation === 'experior' && (\n                  <MenuItem value='experior'>Experior</MenuItem>\n                )}\n                {formState.values.organisation === 'dhibizap' && (\n                  <MenuItem value='dhibizap'>DHI BizAP</MenuItem>\n                )}\n                {formState.values.organisation === 'dell' && (\n                  <MenuItem value='dell'>Dell</MenuItem>\n                )}\n              </TextField>\n              <TextField\n                fullWidth\n                required\n                label='Test Code'\n                name='testCode'\n                placeholder='Test Code'\n                error={hasError('testCode')}\n                helperText={\n                  hasError('testCode') ? formState.errors.testCode : null\n                }\n                value={formState.values.testCode || ''}\n                onChange={handleInputChange}\n                type='text'\n                variant='outlined'\n                margin='normal'\n                InputLabelProps={{\n                  shrink: true\n                }}\n              />\n              <FormSubmitButton\n                fullWidth\n                color='primary'\n                size='large'\n                variant='contained'\n                margin='normal'\n                type='submit'\n                disabled={!formState.isValid || formState.isSubmitting}\n                endIcon={\n                  formState.isSubmitting ? (\n                    <CircularProgress color='inherit' size={20} />\n                  ) : null\n                }\n              >\n                Start Test\n              </FormSubmitButton>\n            </form>\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  )\n}\n\nexport default Index\n"]},"metadata":{},"sourceType":"module"}